{"version":3,"sources":["components/Timers/Settings/Buttons.js","components/Timers/Settings/Digits.js","sounds/bop.mp3","components/Timers/Settings/Advance.js","components/Timers/Settings/Bop.js","components/Timers/Settings/Settings.js","components/Tooltips.js","components/Timers/CountdownTimer.js","components/Timers/Settings/Countdown.js","components/Timers/Stopwatch.js","theme.js","utils/config.js","reducers/userReducer.js","utils/storage.js","services/profileService.js","reducers/profileReducer.js","components/Dashboard.js","components/Footer.js","components/Help.js","services/loginService.js","components/FormField.js","components/Notification.js","components/Welcome.js","components/Login.js","services/plannerService.js","reducers/plannerReducer.js","services/deleteService.js","components/Planner.js","components/Profile.js","services/registerService.js","components/Register.js","services/workoutService.js","reducers/workoutReducer.js","components/Statistics.js","components/Timers/Settings/Color.js","sounds/beat.mp3","components/Timers/Metronome.js","components/Timers.js","components/Workout.js","App.js","store.js","index.js","reducers/timersReducer.js"],"names":["Buttons","handleStart","handlePause","handleReset","tooltips","className","placement","delay","show","hide","overlay","startTooltip","size","variant","type","onClick","icon","faPlayCircle","pauseTooltip","faPauseCircle","resetTooltip","faTimesCircle","styles","timerDigit","fontFamily","theme","fontFamilies","langar","fontSize","fontSizes","digits","Digits","time","style","Math","floor","slice","advance","display","displays","flex","justifyContent","justifications","center","timerInput","quantico","subheading","paddingBottom","paddings","small","Advance","timer","useState","addOneHundreth","setAddOneHundreth","dispatch","useDispatch","handleAdvance","event","preventDefault","target","minutes","value","seconds","newCountdownAdvance","parseInt","newStopwatchAdvance","reset","OverlayTrigger","advanceTooltip","Form","onSubmit","faHourglassStart","Control","name","placeholder","min","max","Button","Bop","isBop","setIsBop","bopLabel","setBopLabel","handleClick","toggleCountdownBop","toggleStopwatchBop","bopTooltip","faRobot","Check","label","Settings","workoutTooltip","props","id","timersTooltip","statisticsTooltip","plannerTooltip","profileTooltip","helpTooltip","selectedWorkoutCategoryTitleTooltip","selectedWorkoutPreviousTargetTooltip","selectedWorkoutPreviousResultTooltip","selectedWorkoutPreviousNotesTooltip","selectedWorkoutTargetTooltip","selectedWorkoutResultTooltip","selectedWorkoutNotesTooltip","newWorkoutCategoryTitleTooltip","newWorkoutTargetTooltip","countdowntimerTimeTooltip","metronomeLightTooltip","statisticsNotesTooltip","plannerNameTooltip","plannerMemoTooltip","CountdownTimer","setTime","isActive","setIsActive","isPaused","setIsPaused","bopSound","setBopSound","isAdvance","setIsAdvance","countdown","setCountdown","bop","Audio","bopAudio","useEffect","countOneHundreth","setInterval","t","eval","clearInterval","newAdvance","useSelector","state","timers","countdownAdvance","toggleBop","countdownBop","newCountdown","undefined","play","Group","controlId","defaultActiveKey","eventKey","title","disabled","Countdown","handleCountdown","hours","faClock","Stopwatch","operator","setOperator","stopwatchAdvance","stopwatchBop","alignments","colors","darkBlue","darkPink","errorRed","grey","flexDirections","column","row","footer","heading","subtitle","fontWeights","bold","heights","medium","spaceBetween","spaceEvenly","margins","tiny","large","zero","textDecorations","none","dotenv","config","createUser","newUser","a","data","user","login","loggedIn","logout","userReducer","action","planKey","process","statisticsKey","tabKey","timeoutKey","storageKey","workoutKey","plan","localStorage","setItem","JSON","stringify","parse","getItem","statistics","tab","timeout","removeItem","workout","baseUrl","getConfig","headers","Authorization","storage","token","getTooltips","axios","post","response","toggleTooltips","put","changePassword","profileService","profileReducer","color","padding","Dashboard","key","setKey","profile","Navbar","sticky","collapseOnSelect","expand","bg","Toggle","Collapse","Nav","activeKey","onSelect","k","Link","href","as","to","faDumbbell","solidClock","faChartLine","faBrain","faUser","faQuestionCircle","footerStyle","backgroundColor","Footer","setShow","handleClose","Modal","onHide","Header","Title","Body","button","paddingTop","paddingRight","paddingLeft","helpIcon","Help","clearTimeout","Container","Accordion","Item","Card","border","textAlign","Subtitle","Text","faInfo","faSkullCrossbones","credentials","error","textarea","height","Checkbox","children","useField","field","meta","touched","SelectValue","setValue","setTouched","options","map","o","htmlFor","defaultValue","find","onChange","onBlur","TextArea","TextInput","fontWeight","regular","Notification","text","Alert","Spinner","animation","includes","margin","welcomeTab","textDecoration","Welcome","loading","notification","initialValues","username","password","validationSchema","yup","shape","required","LoginContainer","handleSubmit","isValid","dirty","LoginForm","FloatingLabel","faSignInAlt","Login","setText","redirectMessage","setRedirectMessage","isError","setIsError","setLoading","history","useHistory","length","values","setSubmitting","resetForm","loginService","timeoutLogin","setTimeout","push","timeoutError","createNewPlan","newPlan","getAll","createPlan","getPlans","plannerService","plans","plannerReducer","deletePlan","delete","deleteUser","deleteWorkout","initialPlanValues","planName","planMemo","validationPlanSchema","SelectedPlanContainer","DeletePlanContainer","DeletePlanForm","faTrashAlt","PlannerContainer","PlannerForm","Tabs","Tab","faSave","createPlanMemo","selectedPlan","memo","p","Planner","newName","setNewName","setSelectedPlan","planner","planList","plansList","index","NavDropdown","createPlansList","sort","p1","p2","handleDeletePlan","confirm","deleteService","timeoutDelete","message","timeoutCancel","handleAddPlan","trim","timeoutPlan","Brand","menuVariant","marginTop","initialTooltipsValue","initialPasswordValues","oldPassword","newPassword","passwordConfirmation","matches","oneOf","LoggedInUser","ToggleTooltipsContainer","ToggleTooltipsForm","ChangePasswordContainer","ChangePasswordForm","DeleteProfileContainer","DeleteProfileForm","LogoutContainer","LogoutForm","faShareSquare","Profile","tooltipsStatus","handleToggleTooltips","toString","timeoutTooltips","timeoutTooltipsAlreadySet","handleChangePassword","timeoutPassword","handleDeleteProfile","createNew","acceptedTerms","RegisterContainer","RegisterForm","faCloudUploadAlt","Register","newUsername","setNewUsername","registerService","timeoutRegister","createNewWorkout","newWorkout","updateWorkout","createWorkout","getWorkouts","workoutService","workouts","workoutReducer","StatisticsFields","ResponsiveContainer","width","aspect","LineChart","chart","CartesianGrid","XAxis","tick","dataKey","interval","Line","stroke","activeDot","r","YAxis","categoryTitle","avg","result","notes","createStatisticsFields","w","resultItems","reduce","r1","r2","Statistics","selectedStatistics","setSelectedStatistics","workoutList","workoutsList","createWorkoutsList","w1","w2","colorSelect","Color","metronomeColor","setMetronomeColor","newMetronomeColor","handleColor","newColor","faLightbulb","bpm","Metronome","showBpm","setShowBpm","setBpm","setColor","light","setLight","beat","beatAudio","countBeat","millisecondsToNextBeat","faCircle","Range","newBpm","Timers","initialWorkoutValues","validationWorkoutSchema","UpdateWorkoutContainer","UpdateWorkoutForm","rows","DeleteWorkoutContainer","DeleteWorkoutForm","NewWorkoutContainer","NewWorkoutForm","Workout","newCategoryTitle","setNewCategoryTitle","selectedWorkout","setSelectedWorkout","handleUpdateWorkout","d","Date","date","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","timeoutWorkout","handleDeleteWorkout","handleAddWorkout","createWorkoutFields","App","path","reducer","combineReducers","timersReducer","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.adcb46f1.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport {\r\n  Button, OverlayTrigger,\r\n} from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n  faPauseCircle, faPlayCircle, faTimesCircle,\r\n} from '@fortawesome/free-regular-svg-icons'\r\n\r\nimport {\r\n  startTooltip, pauseTooltip, resetTooltip,\r\n} from '../../Tooltips'\r\n\r\nconst Buttons = ({ handleStart, handlePause, handleReset, tooltips }) => {\r\n  return (\r\n    <div className=\"mb-3\">\r\n      {tooltips ? (\r\n        <OverlayTrigger\r\n          placement=\"bottom\"\r\n          delay={{ show: 1000, hide: 0 }}\r\n          overlay={startTooltip}\r\n        >\r\n          <Button size=\"lg\" variant=\"outline-success\" type=\"submit\" onClick={handleStart}>\r\n            <FontAwesomeIcon icon={faPlayCircle} size=\"2x\" />\r\n          </Button>\r\n        </OverlayTrigger>\r\n      ) : (\r\n        <Button size=\"lg\" variant=\"outline-success\" type=\"submit\" onClick={handleStart}>\r\n          <FontAwesomeIcon icon={faPlayCircle} size=\"2x\" />\r\n        </Button>\r\n      )}\r\n      {tooltips ? (\r\n        <OverlayTrigger\r\n          placement=\"bottom\"\r\n          delay={{ show: 1000, hide: 0 }}\r\n          overlay={pauseTooltip}\r\n        >\r\n          <Button size=\"lg\" variant=\"outline-warning\" type=\"submit\" onClick={handlePause}>\r\n            <FontAwesomeIcon icon={faPauseCircle} size=\"2x\" />\r\n          </Button>\r\n        </OverlayTrigger>\r\n      ) : (\r\n        <Button size=\"lg\" variant=\"outline-warning\" type=\"submit\" onClick={handlePause}>\r\n          <FontAwesomeIcon icon={faPauseCircle} size=\"2x\" />\r\n        </Button>\r\n      )}\r\n      {tooltips ? (\r\n        <OverlayTrigger\r\n          placement=\"bottom\"\r\n          delay={{ show: 1000, hide: 0 }}\r\n          overlay={resetTooltip}\r\n        >\r\n          <Button size=\"lg\" variant=\"outline-danger\" type=\"submit\" onClick={handleReset}>\r\n            <FontAwesomeIcon icon={faTimesCircle} size=\"2x\" />\r\n          </Button>\r\n        </OverlayTrigger>\r\n      ) : (\r\n        <Button size=\"lg\" variant=\"outline-danger\" type=\"submit\" onClick={handleReset}>\r\n          <FontAwesomeIcon icon={faTimesCircle} size=\"2x\" />\r\n        </Button>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Buttons","import React from 'react'\r\n\r\nimport theme from '../../../theme'\r\n\r\nconst styles = {\r\n  timerDigit: {\r\n    fontFamily: theme.fontFamilies.langar,\r\n    fontSize: theme.fontSizes.digits,\r\n  },\r\n}\r\n\r\nconst Digits = ({ time }) => {\r\n  return (\r\n    <div style={styles.timerDigit}>\r\n      {\r\n        ('0' + Math.floor((time / 3600000) % 60)).slice(-2)\r\n      }:\r\n      {\r\n        ('0' + Math.floor((time / 60000) % 60)).slice(-2)\r\n      }&rsquo;\r\n      {\r\n        ('0' + Math.floor((time / 1000) % 60)).slice(-2)\r\n      }&rsquo;&rsquo;\r\n      {\r\n        ('0' + ((time / 10) % 100)).slice(-2)\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Digits","export default __webpack_public_path__ + \"static/media/bop.861a813e.mp3\";","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n  newCountdownAdvance, newStopwatchAdvance,\r\n} from '../../../reducers/timersReducer'\r\n\r\nimport {\r\n  Button, Form, OverlayTrigger,\r\n} from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHourglassStart } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { advanceTooltip } from '../../Tooltips'\r\n\r\nimport theme from '../../../theme'\r\n\r\nconst styles = {\r\n  advance: {\r\n    display: theme.displays.flex,\r\n    justifyContent: theme.justifications.center,\r\n  },\r\n  timerInput: {\r\n    display: theme.displays.flex,\r\n    fontFamily: theme.fontFamilies.quantico,\r\n    fontSize: theme.fontSizes.subheading,\r\n    paddingBottom: theme.paddings.small,\r\n  },\r\n}\r\n\r\nconst Advance = ({ tooltips, timer }) => {\r\n  const [addOneHundreth, setAddOneHundreth] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  // Advance needs to dispatch a different integer number each time Set ' '' is pressed\r\n  const handleAdvance = (event) => {\r\n    event.preventDefault()\r\n    const advance = (event.target.minutes.value * 60000) + (event.target.seconds.value * 1000)\r\n    if (advance > 0 && !addOneHundreth === true) {\r\n      timer === 'countdown' && dispatch(newCountdownAdvance(parseInt(advance + 10)))\r\n      timer === 'stopwatch' && dispatch(newStopwatchAdvance(parseInt(advance + 10)))\r\n      setAddOneHundreth(!addOneHundreth)\r\n    }\r\n    if (advance > 0 && !addOneHundreth === false) {\r\n      timer === 'countdown' && dispatch(newCountdownAdvance(parseInt(advance - 10)))\r\n      timer === 'stopwatch' && dispatch(newStopwatchAdvance(parseInt(advance - 10)))\r\n      setAddOneHundreth(!addOneHundreth)\r\n    }\r\n    event.target.reset()\r\n  }\r\n\r\n  return (\r\n    <div className=\"mb-3\">\r\n      {tooltips ? (\r\n        <OverlayTrigger\r\n          placement=\"top\"\r\n          delay={{ show: 1000, hide: 0 }}\r\n          overlay={advanceTooltip}\r\n        >\r\n          <Form onSubmit={handleAdvance}>\r\n            <div style={styles.timerInput}>\r\n              <div>\r\n                <FontAwesomeIcon icon={faHourglassStart} />\r\n              </div>\r\n              <div>\r\n                &nbsp;Advance\r\n              </div>\r\n            </div>\r\n            <div style={styles.timerInput}>\r\n              <div style={styles.advance} className=\"mb-3\">\r\n                <Form.Control\r\n                  name=\"minutes\"\r\n                  type=\"number\"\r\n                  placeholder=\"00&rsquo;\"\r\n                  min=\"0\"\r\n                  max=\"59\"\r\n                />\r\n                <Form.Control\r\n                  name=\"seconds\"\r\n                  type=\"number\"\r\n                  placeholder=\"00&rsquo;&rsquo;\"\r\n                  min=\"0\"\r\n                  max=\"59\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <Button size=\"lg\" variant=\"outline-success\" type=\"submit\">\r\n              Set&nbsp;&nbsp;&rsquo;&nbsp;&rsquo;&rsquo;\r\n            </Button>\r\n          </Form>\r\n        </OverlayTrigger>\r\n      ) : (\r\n        <Form onSubmit={handleAdvance}>\r\n          <div style={styles.timerInput}>\r\n            <div>\r\n              <FontAwesomeIcon icon={faHourglassStart} />\r\n            </div>\r\n            <div>\r\n              &nbsp;Advance\r\n            </div>\r\n          </div>\r\n          <div style={styles.timerInput}>\r\n            <div style={styles.advance} className=\"mb-3\">\r\n              <Form.Control\r\n                name=\"minutes\"\r\n                type=\"number\"\r\n                placeholder=\"00&rsquo;\"\r\n                min=\"0\"\r\n                max=\"59\"\r\n              />\r\n              <Form.Control\r\n                name=\"seconds\"\r\n                type=\"number\"\r\n                placeholder=\"00&rsquo;&rsquo;\"\r\n                min=\"0\"\r\n                max=\"59\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <Button size=\"lg\" variant=\"outline-success\" type=\"submit\">\r\n            Set&nbsp;&nbsp;&rsquo;&nbsp;&rsquo;&rsquo;\r\n          </Button>\r\n        </Form>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Advance","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n  toggleCountdownBop, toggleStopwatchBop,\r\n} from '../../../reducers/timersReducer'\r\n\r\nimport {\r\n  Form, OverlayTrigger,\r\n} from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faRobot } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { bopTooltip } from '../../Tooltips'\r\n\r\nimport theme from '../../../theme'\r\n\r\nconst styles = {\r\n  advance: {\r\n    display: theme.displays.flex,\r\n    justifyContent: theme.justifications.center,\r\n  },\r\n  timerInput: {\r\n    display: theme.displays.flex,\r\n    fontFamily: theme.fontFamilies.quantico,\r\n    fontSize: theme.fontSizes.subheading,\r\n  },\r\n}\r\n\r\nconst Bop = ({ tooltips, timer }) => {\r\n  const [isBop, setIsBop] = useState(false)\r\n  const [bopLabel, setBopLabel] = useState('OFF')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const handleClick = () => {\r\n    if (!isBop === true) {\r\n      setBopLabel('ON')\r\n    } else {\r\n      setBopLabel('OFF')\r\n    }\r\n    setIsBop(!isBop)\r\n    timer === 'countdown' && dispatch(toggleCountdownBop(!isBop))\r\n    timer === 'stopwatch' && dispatch(toggleStopwatchBop(!isBop))\r\n  }\r\n\r\n  return (\r\n    <div style={styles.timerInput} className=\"mb-4\">\r\n      {tooltips ? (\r\n        <OverlayTrigger\r\n          placement=\"top\"\r\n          delay={{ show: 1000, hide: 0 }}\r\n          overlay={bopTooltip}\r\n        >\r\n          <Form>\r\n            <FontAwesomeIcon icon={faRobot} /> {'< B-O-P ! >'}\r\n            <Form.Check\r\n              onClick={handleClick}\r\n              type=\"switch\"\r\n              label={bopLabel}\r\n            />\r\n          </Form>\r\n        </OverlayTrigger>\r\n      ) : (\r\n        <Form>\r\n          <FontAwesomeIcon icon={faRobot} /> {'< B-O-P ! >'}\r\n          <Form.Check\r\n            onClick={handleClick}\r\n            type=\"switch\"\r\n            label={bopLabel}\r\n          />\r\n        </Form>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bop","import React from 'react'\r\n\r\nimport Advance from './Advance'\r\nimport Bop from './Bop'\r\n\r\nconst Settings = ({ tooltips, timer }) => {\r\n  return (\r\n    <>\r\n      <Advance tooltips={tooltips} timer={timer} />\r\n      <Bop tooltips={tooltips} timer={timer} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Settings","import React from 'react'\r\n\r\nimport { Tooltip } from 'react-bootstrap'\r\n\r\n// Dashboard\r\nexport const workoutTooltip = (props) => (\r\n  <Tooltip id=\"workoutTooltip\" {...props}>\r\n    Workout\r\n  </Tooltip>\r\n)\r\n\r\nexport const timersTooltip = (props) => (\r\n  <Tooltip id=\"timersTooltip\" {...props}>\r\n    Timers\r\n  </Tooltip>\r\n)\r\n\r\nexport const statisticsTooltip = (props) => (\r\n  <Tooltip id=\"statisticsTooltip\" {...props}>\r\n    Statistics\r\n  </Tooltip>\r\n)\r\n\r\nexport const plannerTooltip = (props) => (\r\n  <Tooltip id=\"plannerTooltip\" {...props}>\r\n    Planner\r\n  </Tooltip>\r\n)\r\n\r\nexport const profileTooltip = (props) => (\r\n  <Tooltip id=\"profileTooltip\" {...props}>\r\n    Profile\r\n  </Tooltip>\r\n)\r\n\r\nexport const helpTooltip = (props) => (\r\n  <Tooltip id=\"helpTooltip\" {...props}>\r\n    Help\r\n  </Tooltip>\r\n)\r\n\r\n// Workout\r\nexport const selectedWorkoutCategoryTitleTooltip = (props) => (\r\n  <Tooltip id=\"selectedWorkoutCategoryTitleTooltip\" {...props}>\r\n    This is the category and title of the selected workout\r\n  </Tooltip>\r\n)\r\n\r\nexport const selectedWorkoutPreviousTargetTooltip = (props) => (\r\n  <Tooltip id=\"selectedWorkoutPreviousTooltip\" {...props}>\r\n    This is the previous target result of the selected workout\r\n  </Tooltip>\r\n)\r\n\r\nexport const selectedWorkoutPreviousResultTooltip = (props) => (\r\n  <Tooltip id=\"selectedWorkoutPreviousTooltip\" {...props}>\r\n    This is the previous result of the selected workout\r\n  </Tooltip>\r\n)\r\n\r\nexport const selectedWorkoutPreviousNotesTooltip = (props) => (\r\n  <Tooltip id=\"selectedWorkoutPreviousTooltip\" {...props}>\r\n    These are the previous notes of the selected workout.\r\n    Expand the text area by dragging the bottom right corner.\r\n  </Tooltip>\r\n)\r\n\r\nexport const selectedWorkoutTargetTooltip = (props) => (\r\n  <Tooltip id=\"selectedWorkoutTargetTooltip\" {...props}>\r\n    Type the new target result of the selected workout. Previous target will be\r\n    overwritten. This field is optional.\r\n  </Tooltip>\r\n)\r\n\r\nexport const selectedWorkoutResultTooltip = (props) => (\r\n  <Tooltip id=\"selectedWorkoutResultTooltip\" {...props}>\r\n    Type the new result of the selected workout\r\n  </Tooltip>\r\n)\r\n\r\nexport const selectedWorkoutNotesTooltip = (props) => (\r\n  <Tooltip id=\"selectedWorkoutNotesTooltip\" {...props}>\r\n    Write here the new notes of your selected workout. Expand the text area by\r\n    dragging the bottom right corner. This field is optional.\r\n  </Tooltip>\r\n)\r\n\r\nexport const newWorkoutCategoryTitleTooltip = (props) => (\r\n  <Tooltip id=\"newWorkoutCategoryTitleTooltip\" {...props}>\r\n    Type your new workout category and title\r\n  </Tooltip>\r\n)\r\n\r\nexport const newWorkoutTargetTooltip = (props) => (\r\n  <Tooltip id=\"newWorkoutTargetTooltip\" {...props}>\r\n    Type your new workout target result\r\n  </Tooltip>\r\n)\r\n\r\n// Timers\r\nexport const advanceTooltip = (props) => (\r\n  <Tooltip id=\"advanceTooltip\" {...props}>\r\n    Set time before timer starts\r\n  </Tooltip>\r\n)\r\n\r\nexport const bopTooltip = (props) => (\r\n  <Tooltip id=\"bopTooltip\" {...props}>\r\n    Set Bop to talk when timer advance and time is finished\r\n  </Tooltip>\r\n)\r\n\r\nexport const startTooltip = (props) => (\r\n  <Tooltip id=\"startTooltip\" {...props}>\r\n    Start\r\n  </Tooltip>\r\n)\r\n\r\nexport const pauseTooltip = (props) => (\r\n  <Tooltip id=\"pauseTooltip\" {...props}>\r\n    Pause\r\n  </Tooltip>\r\n)\r\n\r\nexport const resetTooltip = (props) => (\r\n  <Tooltip id=\"resetTooltip\" {...props}>\r\n    Reset\r\n  </Tooltip>\r\n)\r\n\r\nexport const countdowntimerTimeTooltip = (props) => (\r\n  <Tooltip id=\"countdowntimerTimeTooltip\" {...props}>\r\n    Remember to set countdown time before setting advance\r\n  </Tooltip>\r\n)\r\n\r\nexport const metronomeLightTooltip = (props) => (\r\n  <Tooltip id=\"metronomeLightTooltip\" {...props}>\r\n    Set metronome light on or off\r\n  </Tooltip>\r\n)\r\n\r\nexport const metronomeSoundTooltip = (props) => (\r\n  <Tooltip id=\"metronomeSoundTooltip\" {...props}>\r\n    Set metronome sound on or off\r\n  </Tooltip>\r\n)\r\n\r\n// Statistics\r\nexport const statisticsNotesTooltip = (props) => (\r\n  <Tooltip id=\"statisticsNotesTooltip\" {...props}>\r\n      Expand your statistics notes text area by dragging the bottom right corner\r\n  </Tooltip>\r\n)\r\n\r\n// Planner\r\nexport const plannerNameTooltip = (props) => (\r\n  <Tooltip id=\"plannerNameTooltip\" {...props}>\r\n    Type your plan name here\r\n  </Tooltip>\r\n)\r\n\r\nexport const plannerMemoTooltip = (props) => (\r\n  <Tooltip id=\"plannerMemoTooltip\" {...props}>\r\n    Expand your plan memo text area by dragging the bottom right corner\r\n  </Tooltip>\r\n)","import React, {\r\n  useEffect, useState,\r\n} from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport {\r\n  Container, Form, Tab, Tabs,\r\n} from 'react-bootstrap'\r\n\r\nimport Buttons from './Settings/Buttons'\r\nimport Countdown from './Settings/Countdown'\r\nimport Digits from './Settings/Digits'\r\nimport Settings from './Settings/Settings'\r\n\r\nimport bopAudio from '../../sounds/bop.mp3'\r\n\r\nconst CountdownTimer = ({ tooltips }) => {\r\n  const [time, setTime] = useState(0)\r\n  const [isActive, setIsActive] = useState(false)\r\n  const [isPaused, setIsPaused] = useState(false)\r\n  const [bopSound, setBopSound] = useState(false)\r\n  const [isAdvance, setIsAdvance] = useState(false)\r\n  const [countdown, setCountdown] = useState(0)\r\n\r\n  const bop = new Audio(bopAudio)\r\n\r\n  useEffect(() => {\r\n    let countOneHundreth = null\r\n\r\n    if (isActive === true && isPaused === false) {\r\n      countOneHundreth = setInterval(() => {\r\n        setTime(t => eval(t - 10))\r\n      }, 10)\r\n    } else {\r\n      clearInterval(countOneHundreth)\r\n    }\r\n\r\n    return () => {\r\n      clearInterval(countOneHundreth)\r\n    }\r\n\r\n  }, [isActive, isPaused])\r\n\r\n  const newAdvance = useSelector(state => state.timers.countdownAdvance)\r\n  const toggleBop = useSelector(state => state.timers.countdownBop)\r\n  const newCountdown = useSelector(state => state.timers.countdown)\r\n\r\n  useEffect(() => {\r\n    if (newCountdown !== undefined  && newCountdown > 0) {\r\n      setCountdown(newCountdown)\r\n      setIsAdvance(false)\r\n      setIsActive(false)\r\n      setIsPaused(true)\r\n      if (newCountdown % 1000 === 10) {\r\n        const count = newCountdown - 10\r\n        setTime(count)\r\n      }\r\n      if (newCountdown % 1000 === 990) {\r\n        const count = newCountdown + 10\r\n        setTime(count)\r\n      }\r\n    }\r\n  }, [newCountdown])\r\n\r\n  useEffect(() => {\r\n    if (newAdvance !== undefined  && newAdvance > 0) {\r\n      setIsAdvance(true)\r\n      setIsActive(false)\r\n      setIsPaused(true)\r\n      if (newAdvance % 1000 === 10) {\r\n        const advance = newAdvance - 10\r\n        setTime(advance)\r\n      }\r\n      if (newAdvance % 1000 === 990) {\r\n        const advance = newAdvance + 10\r\n        setTime(advance)\r\n      }\r\n    }\r\n  }, [newAdvance])\r\n\r\n  useEffect(() => {\r\n    handleReset()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (isAdvance === true && time === 0) {\r\n      bopSound && bop.play()\r\n      setIsAdvance(false)\r\n      if (countdown % 1000 === 10) {\r\n        const count = countdown - 10\r\n        setTime(count)\r\n      }\r\n      if (countdown % 1000 === 990) {\r\n        const count = countdown + 10\r\n        setTime(count)\r\n      }\r\n    }\r\n  }, [time])\r\n\r\n  useEffect(() => {\r\n    if (time < 0) {\r\n      bopSound && bop.play()\r\n      handleReset()\r\n    }\r\n  }, [time])\r\n\r\n  useEffect(() => {\r\n    if (toggleBop !== undefined) {\r\n      setBopSound(toggleBop)\r\n    }\r\n  }, [toggleBop])\r\n\r\n  const handleStart = () => {\r\n    if (time > 0) {\r\n      setIsActive(true)\r\n      setIsPaused(false)\r\n    }\r\n  }\r\n\r\n  const handlePause = () => {\r\n    setIsPaused(true)\r\n  }\r\n\r\n  const handleReset = () => {\r\n    setIsActive(false)\r\n    setIsPaused(true)\r\n    setTime(0)\r\n    setIsAdvance(false)\r\n    setCountdown(0)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form.Group controlId=\"formTimersCountdown\">\r\n        <Tabs defaultActiveKey=\"countdownTimer\" className=\"mb-3\">\r\n          <Tab eventKey=\"countdownTimer\" title=\"Countdown Timer\" disabled>\r\n            <Container>\r\n              <Digits time={time} />\r\n              <Buttons\r\n                isPaused={isPaused}\r\n                handleStart={handleStart}\r\n                handlePause={handlePause}\r\n                handleReset={handleReset}\r\n                tooltips={tooltips}\r\n              />\r\n              <Countdown tooltips={tooltips} />\r\n              <Settings tooltips={tooltips} timer=\"countdown\" />\r\n            </Container>\r\n          </Tab>\r\n        </Tabs>\r\n      </Form.Group>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CountdownTimer","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { newCountdown } from '../../../reducers/timersReducer'\r\n\r\nimport {\r\n  Button, Form, OverlayTrigger,\r\n} from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faClock } from '@fortawesome/free-regular-svg-icons'\r\n\r\nimport { countdowntimerTimeTooltip } from '../../Tooltips'\r\n\r\nimport theme from '../../../theme'\r\n\r\nconst styles = {\r\n  advance: {\r\n    display: theme.displays.flex,\r\n    justifyContent: theme.justifications.center,\r\n  },\r\n  timerInput: {\r\n    display: theme.displays.flex,\r\n    fontFamily: theme.fontFamilies.quantico,\r\n    fontSize: theme.fontSizes.subheading,\r\n    paddingBottom: theme.paddings.small,\r\n  },\r\n}\r\n\r\nconst Countdown = ({ tooltips }) => {\r\n  const [addOneHundreth, setAddOneHundreth] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const handleCountdown = (event) => {\r\n    event.preventDefault()\r\n    const advance = (event.target.hours.value * 3600000)\r\n        + (event.target.minutes.value * 60000)\r\n        + (event.target.seconds.value * 1000)\r\n    if (advance > 0 && !addOneHundreth === true) {\r\n      dispatch(newCountdown(parseInt(advance + 10)))\r\n      setAddOneHundreth(!addOneHundreth)\r\n    }\r\n    if (advance > 0 && !addOneHundreth === false) {\r\n      dispatch(newCountdown(parseInt(advance - 10)))\r\n      setAddOneHundreth(!addOneHundreth)\r\n    }\r\n    event.target.reset()\r\n  }\r\n\r\n  return (\r\n    <div className=\"mb-3\">\r\n      {tooltips ? (\r\n        <OverlayTrigger\r\n          placement=\"top\"\r\n          delay={{ show: 1000, hide: 0 }}\r\n          overlay={countdowntimerTimeTooltip}\r\n        >\r\n          <Form onSubmit={handleCountdown}>\r\n            <div style={styles.timerInput}>\r\n              <div>\r\n                <FontAwesomeIcon icon={faClock} />\r\n              </div>\r\n              <div>\r\n                &nbsp;Time\r\n              </div>\r\n            </div>\r\n            <div style={styles.timerInput}>\r\n              <div style={styles.advance} className=\"mb-3\">\r\n                <Form.Control\r\n                  name=\"hours\"\r\n                  type=\"number\"\r\n                  placeholder=\"00:\"\r\n                  min=\"0\"\r\n                  max=\"23\"\r\n                />\r\n                <Form.Control\r\n                  name=\"minutes\"\r\n                  type=\"number\"\r\n                  placeholder=\"00&rsquo;\"\r\n                  min=\"0\"\r\n                  max=\"59\"\r\n                />\r\n                <Form.Control\r\n                  name=\"seconds\"\r\n                  type=\"number\"\r\n                  placeholder=\"00&rsquo;&rsquo;\"\r\n                  min=\"0\"\r\n                  max=\"59\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <Button size=\"lg\" variant=\"outline-success\" type=\"submit\">\r\n                Set&nbsp;&nbsp;:&nbsp;&rsquo;&nbsp;&rsquo;&rsquo;\r\n            </Button>\r\n          </Form>\r\n        </OverlayTrigger>\r\n      ) : (\r\n        <Form onSubmit={handleCountdown}>\r\n          <div style={styles.timerInput}>\r\n            <div>\r\n              <FontAwesomeIcon icon={faClock} />\r\n            </div>\r\n            <div>\r\n              &nbsp;Time\r\n            </div>\r\n          </div>\r\n          <div style={styles.timerInput}>\r\n            <div style={styles.advance} className=\"mb-3\">\r\n              <Form.Control\r\n                name=\"hours\"\r\n                type=\"number\"\r\n                placeholder=\"00:\"\r\n                min=\"0\"\r\n                max=\"23\"\r\n              />\r\n              <Form.Control\r\n                name=\"minutes\"\r\n                type=\"number\"\r\n                placeholder=\"00&rsquo;\"\r\n                min=\"0\"\r\n                max=\"59\"\r\n              />\r\n              <Form.Control\r\n                name=\"seconds\"\r\n                type=\"number\"\r\n                placeholder=\"00&rsquo;&rsquo;\"\r\n                min=\"0\"\r\n                max=\"59\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <Button size=\"lg\" variant=\"outline-success\" type=\"submit\">\r\n              Set&nbsp;&nbsp;:&nbsp;&rsquo;&nbsp;&rsquo;&rsquo;\r\n          </Button>\r\n        </Form>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Countdown","import React, {\r\n  useEffect, useState,\r\n} from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport {\r\n  Container, Form, Tab, Tabs,\r\n} from 'react-bootstrap'\r\n\r\nimport Buttons from './Settings/Buttons'\r\nimport Digits from './Settings/Digits'\r\nimport Settings from './Settings/Settings'\r\n\r\nimport bopAudio from '../../sounds/bop.mp3'\r\n\r\nconst Stopwatch = ({ tooltips }) => {\r\n  const [time, setTime] = useState(0)\r\n  const [operator, setOperator] = useState('+')\r\n  const [isActive, setIsActive] = useState(false)\r\n  const [isPaused, setIsPaused] = useState(false)\r\n  const [bopSound, setBopSound] = useState(false)\r\n\r\n  const bop = new Audio(bopAudio)\r\n\r\n  useEffect(() => {\r\n    let countOneHundreth = null\r\n\r\n    if (isActive === true && isPaused === false) {\r\n      countOneHundreth = setInterval(() => {\r\n        setTime(t => eval(t + operator + 10))\r\n      }, 10)\r\n    } else {\r\n      clearInterval(countOneHundreth)\r\n    }\r\n\r\n    return () => {\r\n      clearInterval(countOneHundreth)\r\n    }\r\n\r\n  }, [operator, isActive, isPaused])\r\n\r\n  const newAdvance = useSelector(state => state.timers.stopwatchAdvance)\r\n  const toggleBop = useSelector(state => state.timers.stopwatchBop)\r\n\r\n  // this is a workaround for Advance Set ' '' feature:\r\n  // useEffect only activates if current newAdvance value is different from previous\r\n  // one and based on the parameter parseInt(advance +- 10) set in Advance, it\r\n  // now has to adjust the newAdvance value back to Set ' '' value for the time to set\r\n  // to the input value\r\n  useEffect(() => {\r\n    if (newAdvance !== undefined  && newAdvance > 0) {\r\n      setIsActive(false)\r\n      setIsPaused(true)\r\n      setOperator('-')\r\n      if (newAdvance % 1000 === 10) {\r\n        const advance = newAdvance - 10\r\n        setTime(advance)\r\n      }\r\n      if (newAdvance % 1000 === 990) {\r\n        const advance = newAdvance + 10\r\n        setTime(advance)\r\n      }\r\n    }\r\n  }, [newAdvance])\r\n\r\n  useEffect(() => {\r\n    handleReset()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (time < 0) {\r\n      bopSound && bop.play()\r\n      setOperator('+')\r\n    }\r\n  }, [time])\r\n\r\n  useEffect(() => {\r\n    if (toggleBop !== undefined) {\r\n      setBopSound(toggleBop)\r\n    }\r\n  }, [toggleBop])\r\n\r\n  const handleStart = () => {\r\n    setIsActive(true)\r\n    setIsPaused(false)\r\n  }\r\n\r\n  const handlePause = () => {\r\n    setIsPaused(true)\r\n  }\r\n\r\n  const handleReset = () => {\r\n    setIsActive(false)\r\n    setIsPaused(true)\r\n    setTime(0)\r\n    setOperator('+')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form.Group controlId=\"formTimersStopwatch\">\r\n        <Tabs defaultActiveKey=\"stopwatch\" className=\"mb-3\">\r\n          <Tab eventKey=\"stopwatch\" title=\"Stopwatch\" disabled>\r\n            <Container>\r\n              <Digits time={time} />\r\n              <Buttons\r\n                isPaused={isPaused}\r\n                handleStart={handleStart}\r\n                handlePause={handlePause}\r\n                handleReset={handleReset}\r\n                tooltips={tooltips}\r\n              />\r\n              <Settings tooltips={tooltips} timer=\"stopwatch\" />\r\n            </Container>\r\n          </Tab>\r\n        </Tabs>\r\n      </Form.Group>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Stopwatch","const theme = {\r\n  alignments: {\r\n    center: 'center',\r\n  },\r\n  displays: {\r\n    flex: 'flex',\r\n  },\r\n  colors: {\r\n    darkBlue: '#012854',\r\n    darkPink: '#ff0067',\r\n    errorRed: '#d73a4a',\r\n    grey: '#f7f7f7',\r\n  },\r\n  flexDirections: {\r\n    column: 'column',\r\n    row: 'row',\r\n  },\r\n  fontFamilies: {\r\n    langar: 'Langar',\r\n    quantico: 'Quantico',\r\n  },\r\n  fontSizes: {\r\n    digits: 70,\r\n    footer: 18,\r\n    heading: 60,\r\n    subheading: 25,\r\n    subtitle: 50,\r\n    title: 80,\r\n  },\r\n  fontWeights: {\r\n    bold: 'bold',\r\n  },\r\n  heights: {\r\n    medium: 400,\r\n  },\r\n  justifications: {\r\n    center: 'center',\r\n    spaceBetween: 'space-between',\r\n    spaceEvenly: 'space-evenly',\r\n  },\r\n  margins: {\r\n    medium: 35,\r\n    small: 15,\r\n    tiny: 10,\r\n  },\r\n  paddings: {\r\n    large: 50,\r\n    medium: 35,\r\n    small: 10,\r\n    zero: 0,\r\n  },\r\n  textDecorations: {\r\n    none: 'none',\r\n  },\r\n}\r\n\r\nexport default theme","import dotenv from 'dotenv'\r\ndotenv.config()","const userReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n  case 'CREATE_USER':\r\n    return [...state, action.data]\r\n  case 'DELETE_USER':\r\n    return 'Your profile has been removed.'\r\n  case 'LOGIN':\r\n    return action.data.loggedIn\r\n  case 'LOGOUT':\r\n    return 'You logged out.'\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const createUser = (newUser) => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: 'CREATE_USER',\r\n      data: {\r\n        user: newUser,\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteUser = () => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: 'DELETE_USER',\r\n    })\r\n  }\r\n}\r\n\r\nexport const login = (user) => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: 'LOGIN',\r\n      data: {\r\n        loggedIn: user,\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const logout = () => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: 'LOGOUT',\r\n    })\r\n  }\r\n}\r\n\r\nexport default userReducer","const planKey = process.env.REACT_APP_PLAN_KEY\r\nconst statisticsKey = process.env.REACT_APP_STATISTICS_KEY\r\nconst tabKey = process.env.REACT_APP_TAB_KEY\r\nconst timeoutKey = process.env.REACT_APP_TIMEOUT_KEY\r\nconst storageKey = process.env.REACT_APP_STORAGE_KEY\r\nconst workoutKey = process.env.REACT_APP_WORKOUT_KEY\r\n\r\nconst savePlan = (plan) =>\r\n  localStorage.setItem(planKey, JSON.stringify(plan))\r\n\r\nconst loadPlan= () =>\r\n  JSON.parse(localStorage.getItem(planKey))\r\n\r\nconst saveStatistics = (statistics) =>\r\n  localStorage.setItem(statisticsKey, JSON.stringify(statistics))\r\n\r\nconst loadStatistics = () =>\r\n  JSON.parse(localStorage.getItem(statisticsKey))\r\n\r\nconst saveTab = (tab) =>\r\n  localStorage.setItem(tabKey, JSON.stringify(tab))\r\n\r\nconst loadTab = () =>\r\n  JSON.parse(localStorage.getItem(tabKey))\r\n\r\nconst saveTimeout = (timeout) =>\r\n  localStorage.setItem(timeoutKey, JSON.stringify(timeout))\r\n\r\nconst loadTimeout = () =>\r\n  JSON.parse(localStorage.getItem(timeoutKey))\r\n\r\nconst saveUser = (user) =>\r\n  localStorage.setItem(storageKey, JSON.stringify(user))\r\n\r\nconst loadUser = () =>\r\n  JSON.parse(localStorage.getItem(storageKey))\r\n\r\nconst logoutUser = () => {\r\n  localStorage.removeItem(planKey)\r\n  localStorage.removeItem(statisticsKey)\r\n  localStorage.removeItem(tabKey)\r\n  localStorage.removeItem(timeoutKey)\r\n  localStorage.removeItem(storageKey)\r\n  localStorage.removeItem(workoutKey)\r\n}\r\n\r\nconst saveWorkout = (workout) =>\r\n  localStorage.setItem(workoutKey, JSON.stringify(workout))\r\n\r\nconst loadWorkout = () =>\r\n  JSON.parse(localStorage.getItem(workoutKey))\r\n\r\nexport default {\r\n  savePlan,\r\n  loadPlan,\r\n  saveStatistics,\r\n  loadStatistics,\r\n  saveTab,\r\n  loadTab,\r\n  saveTimeout,\r\n  loadTimeout,\r\n  saveUser,\r\n  loadUser,\r\n  logoutUser,\r\n  saveWorkout,\r\n  loadWorkout,\r\n}","import axios from 'axios'\r\nimport storage from '../utils/storage'\r\n\r\nlet baseUrl = '/dashboard/profile'\r\n\r\nconst getConfig = () => {\r\n  return {\r\n    headers: { Authorization: `bearer ${storage.loadUser().token}` }\r\n  }\r\n}\r\n\r\nif (process.env.NODE_ENV === 'test') {\r\n  baseUrl = 'http://localhost:3001/dashboard/profile'\r\n}\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  baseUrl = '/dashboard/profile'\r\n}\r\n\r\nconst getTooltips = async () => {\r\n  const response = await axios.post(`${baseUrl}/tooltips`, {}, getConfig())\r\n  return response.data\r\n}\r\n\r\nconst toggleTooltips = async (tooltips) => {\r\n  const response = await axios.put(`${baseUrl}/toggleTooltips`, tooltips, getConfig())\r\n  return response.data\r\n}\r\n\r\nconst changePassword = async (changePassword) => {\r\n  const response = await axios.put(`${baseUrl}/newPassword`, changePassword, getConfig())\r\n  return response.data\r\n}\r\n\r\nexport default { getTooltips, toggleTooltips, changePassword }","import profileService from '../services/profileService'\r\n\r\nconst profileReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n  case 'CHANGED_PASSWORD':\r\n    return 'Your password has been changed.'\r\n  case 'GET_TOOLTIPS':\r\n    return action.data\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const changedPassword = () => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: 'CHANGED_PASSWORD',\r\n    })\r\n  }\r\n}\r\n\r\nexport const getTooltips = () => {\r\n  return async dispatch => {\r\n    const data = await profileService.getTooltips()\r\n    dispatch({\r\n      type: 'GET_TOOLTIPS',\r\n      data: {\r\n        tooltips: data,\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default profileReducer","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport storage from '../utils/storage'\r\n\r\nimport {\r\n  Nav, Navbar, OverlayTrigger,\r\n} from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n  faQuestionCircle, faUser,\r\n} from '@fortawesome/free-regular-svg-icons'\r\nimport {\r\n  faBrain, faChartLine, faClock as solidClock, faDumbbell,\r\n} from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport {\r\n  workoutTooltip, timersTooltip, statisticsTooltip, plannerTooltip,\r\n  profileTooltip, helpTooltip,\r\n} from './Tooltips'\r\n\r\nimport theme from '../theme'\r\n\r\nconst styles = {\r\n  tab: {\r\n    color: theme.colors.darkBlue,\r\n    fontSize: theme.fontSizes.heading,\r\n    padding: theme.paddings.medium,\r\n  },\r\n}\r\n\r\nconst Dashboard = () => {\r\n  const [key, setKey] = useState(storage.loadTab())\r\n\r\n  const tooltips = useSelector(state => state.profile.tooltips)\r\n\r\n  return (\r\n    <Navbar sticky=\"top\" collapseOnSelect expand=\"lg\" bg=\"light\">\r\n      <Navbar.Toggle />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"m-auto\" variant=\"tabs\" activeKey={key}\r\n          onSelect={(k) => setKey(k)}>\r\n          <Nav.Link eventKey=\"workout\" href=\"#\" as=\"span\">\r\n            {tooltips ? (\r\n              <OverlayTrigger\r\n                placement=\"bottom\"\r\n                delay={{ show: 1000, hide: 0 }}\r\n                overlay={workoutTooltip}\r\n              >\r\n                <Link style={styles.tab} to=\"/dashboard/workout\">\r\n                  <FontAwesomeIcon icon={faDumbbell} />\r\n                </Link>\r\n              </OverlayTrigger>\r\n            ) : (\r\n              <Link style={styles.tab} to=\"/dashboard/workout\">\r\n                <FontAwesomeIcon icon={faDumbbell} />\r\n              </Link>\r\n            )}\r\n          </Nav.Link>\r\n          <Nav.Link eventKey=\"timers\" href=\"#\" as=\"span\">\r\n            {tooltips ? (\r\n              <OverlayTrigger\r\n                placement=\"bottom\"\r\n                delay={{ show: 1000, hide: 0 }}\r\n                overlay={timersTooltip}\r\n              >\r\n                <Link style={styles.tab} to=\"/dashboard/timers\">\r\n                  <FontAwesomeIcon icon={solidClock} />\r\n                </Link>\r\n              </OverlayTrigger>\r\n            ) : (\r\n              <Link style={styles.tab} to=\"/dashboard/timers\">\r\n                <FontAwesomeIcon icon={solidClock} />\r\n              </Link>\r\n            )}\r\n          </Nav.Link>\r\n          <Nav.Link eventKey=\"statistics\" href=\"#\" as=\"span\">\r\n            {tooltips ? (\r\n              <OverlayTrigger\r\n                placement=\"bottom\"\r\n                delay={{ show: 1000, hide: 0 }}\r\n                overlay={statisticsTooltip}\r\n              >\r\n                <Link style={styles.tab} to=\"/dashboard/statistics\">\r\n                  <FontAwesomeIcon icon={faChartLine} />\r\n                </Link>\r\n              </OverlayTrigger>\r\n            ) : (\r\n              <Link style={styles.tab} to=\"/dashboard/statistics\">\r\n                <FontAwesomeIcon icon={faChartLine} />\r\n              </Link>\r\n            )}\r\n          </Nav.Link>\r\n          <Nav.Link eventKey=\"planner\" href=\"#\" as=\"span\">\r\n            {tooltips ? (\r\n              <OverlayTrigger\r\n                placement=\"bottom\"\r\n                delay={{ show: 1000, hide: 0 }}\r\n                overlay={plannerTooltip}\r\n              >\r\n                <Link style={styles.tab} to=\"/dashboard/planner\">\r\n                  <FontAwesomeIcon icon={faBrain} />\r\n                </Link>\r\n              </OverlayTrigger>\r\n            ) : (\r\n              <Link style={styles.tab} to=\"/dashboard/planner\">\r\n                <FontAwesomeIcon icon={faBrain} />\r\n              </Link>\r\n            )}\r\n          </Nav.Link>\r\n          <Nav.Link eventKey=\"profile\" href=\"#\" as=\"span\">\r\n            {tooltips ? (\r\n              <OverlayTrigger\r\n                placement=\"bottom\"\r\n                delay={{ show: 1000, hide: 0 }}\r\n                overlay={profileTooltip}\r\n              >\r\n                <Link style={styles.tab} to=\"/dashboard/profile\">\r\n                  <FontAwesomeIcon icon={faUser} />\r\n                </Link>\r\n              </OverlayTrigger>\r\n            ) : (\r\n              <Link style={styles.tab} to=\"/dashboard/profile\">\r\n                <FontAwesomeIcon icon={faUser} />\r\n              </Link>\r\n            )}\r\n          </Nav.Link>\r\n          <Nav.Link eventKey=\"help\" href=\"#\" as=\"span\">\r\n            {tooltips ? (\r\n              <OverlayTrigger\r\n                placement=\"bottom\"\r\n                delay={{ show: 1000, hide: 0 }}\r\n                overlay={helpTooltip}\r\n              >\r\n                <Link style={styles.tab} to=\"/dashboard/help\">\r\n                  <FontAwesomeIcon icon={faQuestionCircle} />\r\n                </Link>\r\n              </OverlayTrigger>\r\n            ) : (\r\n              <Link style={styles.tab} to=\"/dashboard/help\">\r\n                <FontAwesomeIcon icon={faQuestionCircle} />\r\n              </Link>\r\n            )}\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default Dashboard","import React, { useState } from 'react'\r\n\r\nimport {\r\n  Button, Modal,\r\n} from 'react-bootstrap'\r\n\r\nimport theme from '../theme'\r\n\r\nconst footerStyle = {\r\n  backgroundColor: theme.colors.grey,\r\n  fontSize: theme.fontSizes.footer,\r\n}\r\n\r\nconst Footer = () => {\r\n  const [show, setShow] = useState(false)\r\n\r\n  const handleClose = () => setShow(false)\r\n  const handleShow = () => setShow(true)\r\n\r\n  return (\r\n    <div className=\"d-grid\">\r\n      <Button style={footerStyle} variant=\"light\" onClick={handleShow} id=\"termsText\">\r\n        TERMS OF SERVICE, Workout Helper 2021.\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header>\r\n          <Modal.Title>Terms of Service</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Modal.Header><h5>Terms and Conditions</h5></Modal.Header>\r\n        By using this Site (the &apos;Site&apos;) you agree to be bound by and accept the\r\n        following disclaimer along with the terms and conditions about the Site&apos;s cookie\r\n        policy, privacy policy, availability, viruses, bugs and malicious use, intellectual\r\n        property rights, liability and links. Please read them carefully.\r\n          <Modal.Header><h5>Disclaimer</h5></Modal.Header>\r\n        The Site has not been created for monetary gain. Any information\r\n        on the Site should not be substituted for an advice. No liability is assumed by anyone\r\n        for losses suffered by any person or organisation relying directly or indirectly on\r\n        information published on the Site. Views expressed in parts of the Site,\r\n        including Help and Tooltips are the views of the Site creator individually and do not\r\n        necessarily offer any legal or non-legal advice whatsoever.\r\n        Information appearing on the Site may only be reproduced with prior approval from the\r\n        Site creator and credit given to the source. The sounds on the Site have been self\r\n        made using Teenage Engineering PO-12 rhythm pocket operator.\r\n          <Modal.Header><h5>Cookie policy</h5></Modal.Header>\r\n        The required first party cookies (the cookies that are placed by the Site) are placed\r\n        and set by the Site in order to enable you to fully use the Site and its features.\r\n        Without these cookies logging in would not be possible.\r\n          <Modal.Header><h5>Privacy policy</h5></Modal.Header>\r\n        Any personal data collected through your use of the Site is done by the Site only in\r\n        order for the Site to operate effectively and provide you the best experience with it.\r\n        The data collected by the Site is the data that you have written in the registration form,\r\n        the login form and everything you have written to any workout or plan, all the content in\r\n        your Dashboard, your timer settings, your statistics and your profile settings.\r\n        You can erase all this information that the Site has collected of you by deleting your\r\n        account from the Delete account section in your Dashboard Profile page. This action will\r\n        remove all of the stored data from your account from the database of this Site. The Site\r\n        creator, though, makes no guarantee that if any of the information you have provided is\r\n        used or not used by unauthorized persons in any way, form or means not mentioned here.\r\n        If you wish to make sure that no one will ever see or get or misuse any of the information\r\n        you have provided to the Site at any time, <strong>DO NOT REGISTER</strong> at all.\r\n          <Modal.Header><h5>Availability</h5></Modal.Header>\r\n          <strong>You need to enable JavaScript to run this app.</strong> There is and will not be\r\n        any service to provide a forgotten password or a password to replace a forgotten one to the\r\n        user under any circumstances. Also there will be no guarantee that the Site will always be\r\n        available or be uninterrupted. You will also accept that during site maintenance,\r\n          all of your data could be <strong> PERMANATELY REMOVED</strong> without notice and without\r\n        possibility to recover any of it after maintenance is finished. The site might also be\r\n          <strong> PERMANATELY CLOSED</strong> at any given time without notice.\r\n          <Modal.Header><h5>Viruses, bugs and malicious use</h5></Modal.Header>\r\n        You are responsible for configuring your information technology, hardware, software and\r\n        platform to access the Site. You should use your own virus protection software. You must\r\n        not misuse the Site by introducing viruses, trojans, worms, logic bombs or other material\r\n        that is malicious or technologically hamful. You must not attempt to gain unauthorised\r\n        access to this Site, the server on which this Site is stored or any server, computer or\r\n        database connected to this Site. You must not attack this Site via a denial-of-service\r\n        attack or a distributed denial-of service attack or doing anything which may affect the\r\n        functioning of or the ability of any other person to access the Site. In any such breach\r\n        your right to use this Site will cease immediately and such breach will be reported to the\r\n        law enforcement authorities.\r\n          <Modal.Header><h5>Intellectual property rights</h5></Modal.Header>\r\n        The material and content provided on the Site is for your personal, non-commercial use only\r\n        and you agree not for yourself or through or by way of assistance from any third party to\r\n        distribute, copy, extract or commercially exploit such material or content. This Site as a\r\n        whole is protected by copyright and other intellectual property rights. All rights are\r\n        reserved.\r\n          <Modal.Header><h5>Liability</h5></Modal.Header>\r\n        The Site creator disclaims all liability and responsibility arising from any reliance\r\n        placed on the content of the Site by you, or by anyone who may be informed of the\r\n        Site&apos;s contents.\r\n          <Modal.Header><h5>Links</h5></Modal.Header>\r\n        The Site creator makes no representations whatsoever about any other sites that you may\r\n        or may not access through this Site or that may link to this Site.\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <br />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer","import React, { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { getTooltips } from '../reducers/profileReducer'\r\nimport { logout } from '../reducers/userReducer'\r\nimport storage from '../utils/storage'\r\n\r\nimport {\r\n  Accordion, Card, Container,\r\n} from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUser } from '@fortawesome/free-regular-svg-icons'\r\nimport {\r\n  faBrain, faChartLine, faClock as solidClock, faDumbbell,\r\n  faInfo, faSkullCrossbones,\r\n} from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport theme from '../theme'\r\nimport Dashboard from './Dashboard'\r\nimport Footer from './Footer'\r\n\r\nconst styles = {\r\n  button: {\r\n    display: theme.displays.flex,\r\n    justifyContent: theme.justifications.spaceBetween,\r\n    paddingTop: theme.paddings.small,\r\n    paddingRight: theme.paddings.zero,\r\n    paddingBottom: theme.paddings.small,\r\n    paddingLeft: theme.paddings.zero,\r\n  },\r\n  helpIcon: {\r\n    display: theme.displays.flex,\r\n    justifyContent: theme.justifications.center,\r\n  },\r\n  subtitle: {\r\n    color: theme.colors.darkPink,\r\n    fontFamily: theme.fontFamilies.quantico,\r\n    fontSize: theme.fontSizes.subtitle,\r\n  },\r\n}\r\n\r\nconst Help = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (storage.loadUser() === null) {\r\n      dispatch(logout())\r\n    } else {\r\n      clearTimeout(storage.loadTimeout())\r\n      dispatch(getTooltips())\r\n    }\r\n  }, [])\r\n\r\n  storage.saveTab('help')\r\n\r\n  return (\r\n    <Container>\r\n      <Dashboard />\r\n      <h2 style={styles.subtitle}>Help</h2>\r\n      <Accordion defaultActiveKey=\"0\">\r\n        <Accordion.Item>\r\n          <Accordion.Header>Workout</Accordion.Header>\r\n          <Accordion.Body>\r\n            <Card border=\"info\">\r\n              <Card.Body>\r\n                <Container style={styles.helpIcon}>\r\n                  <FontAwesomeIcon icon={faDumbbell} size=\"3x\" />\r\n                </Container>\r\n                <Card.Header style={{ textAlign: theme.alignments.center }}>\r\n                  <Card.Title>Workout</Card.Title>\r\n                </Card.Header>\r\n                <br />\r\n                <Card.Subtitle>Select workout: Workouts</Card.Subtitle>\r\n                <Card.Text>\r\n                The saved workouts will show up here in alphabetical order. By clicking a\r\n                workout, the workout will appear under the Selected Workout tab.\r\n                </Card.Text>\r\n                <Card.Subtitle>Selected Workout</Card.Subtitle>\r\n                <Card.Text>\r\n                Here the workout that was selected from Select workout dropdown list will be\r\n                shown.\r\n                </Card.Text>\r\n                <Card.Subtitle>Selected Workout Category - Title</Card.Subtitle>\r\n                <Card.Text>\r\n                This shows the Category - Title of the Selected Workout.\r\n                </Card.Text>\r\n                <Card.Subtitle>Previous Target Result</Card.Subtitle>\r\n                <Card.Text>\r\n                This shows the previous target of the Selected Workout.\r\n                </Card.Text>\r\n                <Card.Subtitle>Previous Result</Card.Subtitle>\r\n                <Card.Text>\r\n                This shows the previous result of the Selected Workout.\r\n                </Card.Text>\r\n                <Card.Subtitle>Previous Notes</Card.Subtitle>\r\n                <Card.Text>\r\n                This shows the previous notes of the Selected Workout.\r\n                </Card.Text>\r\n                <Card.Subtitle>New Target Result</Card.Subtitle>\r\n                <Card.Text>\r\n                Here the new target for the result of the workout will be set. This field is\r\n                optional.\r\n                </Card.Text>\r\n                <Card.Subtitle>New Result</Card.Subtitle>\r\n                <Card.Text>\r\n                When you complete a workout, you can save one (1) parameter for each workout. E.g.\r\n                the reps for an exercise. Also by using your imagination, you can save pretty much\r\n                any parameter you want. If you want to keep track of let&rsquo;s say the water\r\n                temperature of a lake, then you would save the temperature measurement as the one\r\n                parameter of this &rsquo;workout&rsquo; if you will. Fragments can be saved as\r\n                .5002 or 90.01 up to 38 decimal places (.00000000000000000000000000000000000000).\r\n                Use dots [.] instead of commas [,].\r\n                  <br />\r\n                  <FontAwesomeIcon icon={faInfo} color=\"blue\" /> NB You can save a number in the range\r\n                of [-999999999999999999999999999999999999999, 9999999999999999999999999999999999999999].\r\n                If you change the unit used in some of the results, it will mess up the statistics, so\r\n                be careful. Best practice would be to use the same unit of measure e.g. feet throughout\r\n                the workout history. Furthermore if you change new result number and then click the Save\r\n                button for the Selected Workout, it will not overwrite the previous result of this\r\n                workout.\r\n                  <br />\r\n                  <FontAwesomeIcon icon={faInfo} color=\"blue\" /> NB Saved results cannot be edited, they\r\n                can only be removed by deleting the selected workout.\r\n                </Card.Text>\r\n                <Card.Subtitle>. .../ (Notes)</Card.Subtitle>\r\n                <Card.Text>\r\n                Here the new notes for the workout will be written. This field is optional.\r\n                Here you can again use your imagination to set up whatever kinds of notes you want\r\n                for you workout. As an example, you could write down the date when something\r\n                remarkable happened like &rsquo;2.2.2021 I made my personal best of 25 Bench presses,\r\n                thanks to 5 weeks of progressive overload to the upper body.&rsquo;.\r\n                  <br />\r\n                  <FontAwesomeIcon icon={faInfo} color=\"blue\" /> NB Saved notes cannot be edited, they\r\n                can only be removed by deleting the selected workout. There is an upper limit of 5000\r\n                characters per one workout notes.\r\n                </Card.Text>\r\n                <Card.Subtitle>Save</Card.Subtitle>\r\n                <Card.Text>\r\n                By clicking the Save button of the Selected Workout, the fields of the Selected Workout\r\n                form with the currently input parameters and text will be saved and visible on the\r\n                Statistics Tab Chart respectfully.\r\n                </Card.Text>\r\n                <Card.Subtitle>Delete</Card.Subtitle>\r\n                <Card.Text>\r\n                By clicking the Delete button of the Selected Workout and selecting OK from the\r\n                dialog &rsquo;Yes, I understand that his action is irreversible and I wish to delete\r\n                my workout.&rsquo;, the selected workout will be deleted.\r\n                  <br />\r\n                  <FontAwesomeIcon icon={faInfo} color=\"blue\" /> NB This action will remove all history\r\n                of the workout from the Statistics Tab page as well. If there wasn&rsquo;t a workout\r\n                selected when clicking the Delete button, it will not delete anything.\r\n                </Card.Text>\r\n                <Card.Subtitle>Create a New Workout Category and Title</Card.Subtitle>\r\n                <Card.Text>\r\n                Write down the category and title of the workout. It is of course possible to write\r\n                only the title e.g. if the title is long. Category and Title field takes up to 55\r\n                characters and it should represent generally the type of activity or phenomenon you\r\n                are going to measure, e.g. Exercise, Guitar, School, Temperature, Racetrack or\r\n                Competition just to name a few. It would be beneficial to be specific about the title\r\n                of the measured activity. To include used weights, target time frame or used physical\r\n                measurement units in the likes of Bench press 132 lb 1 min, Chord changes A-D 2 min,\r\n                Geometry grades Junior High A+=13...F=1, Malibu Beach water [°F], Laguna Seca hot\r\n                lap [s], Javelin throw [&rsquo;].\r\n                </Card.Text>\r\n                <Card.Subtitle>Create a New Workout Target Result</Card.Subtitle>\r\n                <Card.Text>\r\n                Set the goal of your workout here. You can change the target number even during a\r\n                workout.\r\n                </Card.Text>\r\n                <Card.Subtitle>Save</Card.Subtitle>\r\n                <Card.Text>\r\n                By clicking the Save button at the bottom of the Workout Tab page, the fields of\r\n                the Workout form with the currently input parameters and text will be saved and\r\n                visible on the Statistics Tab Chart respectfully.\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </Accordion.Body>\r\n        </Accordion.Item>\r\n      </Accordion>\r\n      <Accordion defaultActiveKey=\"0\">\r\n        <Accordion.Item>\r\n          <Accordion.Header>Timers</Accordion.Header>\r\n          <Accordion.Body>\r\n            <Card border=\"info\">\r\n              <Card.Body>\r\n                <Container style={styles.helpIcon}>\r\n                  <FontAwesomeIcon icon={solidClock} size=\"3x\" />\r\n                </Container>\r\n                <Card.Header style={{ textAlign: theme.alignments.center }}>\r\n                  <Card.Title>Timers</Card.Title>\r\n                </Card.Header>\r\n                <br />\r\n                <Card.Subtitle>Stopwatch</Card.Subtitle>\r\n                <Card.Text>\r\n                The Stopwatch buttons from left to right are Start, Pause and Reset. Stopwatch is\r\n                started by clicking the Start button, paused by clicking the Pause button and reset\r\n                by clicking the Reset button. The Stopwatch displays the elapsed time that is measured\r\n                with 1/100 second accuracy. The Stopwatch can measure times up to {'99:59\\'59\\'\\'99'}.\r\n                When setting Advance by setting its time in ({'\\''}) and ({'\\'\\''}) and clicking the\r\n                ({'Set \\' \\'\\''}) button, you give yourself time to grab a guitar or get to workout\r\n                starting position before the Stopwatch is started. By clicking ({'< B-O-P ! >'}) ON,\r\n                a sound is played when Advance has count to zero (0).\r\n                </Card.Text>\r\n                <Card.Subtitle>Countdown timer</Card.Subtitle>\r\n                <Card.Text>\r\n                The Countdown timer buttons from left to right are Start, Pause and Reset. Countdown\r\n                timer is started by clicking the Start button, paused by clicking the Pause button and\r\n                reset by clicking the Reset button. The Countdown timer displays the elapsed time that\r\n                is measured with 1/100 second accuracy. The Time can be set to the nearest second and up\r\n                to {'23:59\\'59\\'\\'99'} by clicking the ({'Set : \\' \\'\\''}) button. Remember to set\r\n                Countdown timer Time before Advance, because the Countdown timer will start counting\r\n                from whichever numbers are currently shown on the Countdown timer display.\r\n                When setting Advance by setting its time in ({'\\''}) and ({'\\'\\''}) and clicking the\r\n                ({'Set \\' \\'\\''}) button, you give yourself time to grab a guitar or get to workout\r\n                starting position before the Countdown timer is started. By clicking ({'< B-O-P ! >'})\r\n                ON, a sound is played when Advance has count to zero (0) and when Time has count to zero\r\n                (0).\r\n                </Card.Text>\r\n                <Card.Subtitle>Metronome</Card.Subtitle>\r\n                <Card.Text>\r\n                The Metronome buttons from left to right are Start, Pause and Reset. Metronome is\r\n                started by clicking the Start button, paused by clicking the Pause button and reset\r\n                by clicking the Reset button. By adjusting the BPM slider, you can set your Metronome\r\n                Beats per Minute. Once you have adjusted the BPM slider, click on ({'Set BPM'}) button.\r\n                This action will set the Beats per Minute to the shown value, which can be seen above\r\n                the ({'Set BPM'}) button. The Metronome displays light on each beat above the BPM\r\n                slider once it is started. The color of the light can be altered from the color picker\r\n                under the Color header.\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </Accordion.Body>\r\n        </Accordion.Item>\r\n      </Accordion>\r\n      <Accordion defaultActiveKey=\"0\">\r\n        <Accordion.Item>\r\n          <Accordion.Header>Statistics</Accordion.Header>\r\n          <Accordion.Body>\r\n            <Card border=\"info\">\r\n              <Card.Body>\r\n                <Container style={styles.helpIcon}>\r\n                  <FontAwesomeIcon icon={faChartLine} size=\"3x\" />\r\n                </Container>\r\n                <Card.Header style={{ textAlign: theme.alignments.center }}>\r\n                  <Card.Title>Statistics</Card.Title>\r\n                </Card.Header>\r\n                <br />\r\n                <Card.Subtitle>Selected Statistics</Card.Subtitle>\r\n                <Card.Text>\r\n                View the selected workout result parameters here arranged by the date by\r\n                selecting the statistics from the &rsquo;Select workout statistics:&rsquo;\r\n                dropdown list.\r\n                  <br />\r\n                  <FontAwesomeIcon icon={faInfo} color=\"blue\" /> NB You cannot edit any of\r\n                the viewable parameters in the Statistics Tab.\r\n                  <br />\r\n                  <FontAwesomeIcon icon={faInfo} color=\"blue\" /> NB If you cannot see the latest\r\n                statistics, try selecting the statistics again from the dropdown list.\r\n                </Card.Text>\r\n                <Card.Subtitle>Category - Title</Card.Subtitle>\r\n                <Card.Text>\r\n                View the selected workout category and title here.\r\n                </Card.Text>\r\n                <Card.Subtitle>Target</Card.Subtitle>\r\n                <Card.Text>\r\n                View the selected workout target parameter here.\r\n                </Card.Text>\r\n                <Card.Subtitle>Min</Card.Subtitle>\r\n                <Card.Text>\r\n                View the selected workout min parameter here.\r\n                </Card.Text>\r\n                <Card.Subtitle>Max</Card.Subtitle>\r\n                <Card.Text>\r\n                View the selected workout max parameter here.\r\n                </Card.Text>\r\n                <Card.Subtitle>Avg</Card.Subtitle>\r\n                <Card.Text>\r\n                View the selected workout average parameter here.\r\n                  <br />\r\n                  <FontAwesomeIcon icon={faInfo} color=\"blue\" /> NB The first parameter (0),\r\n                  which is set by the program when a new workout is created, is not taken into\r\n                  account when calculating the average of all the input results.\r\n                </Card.Text>\r\n                <Card.Subtitle>Last</Card.Subtitle>\r\n                <Card.Text>\r\n                View the selected workout last parameter here.\r\n                </Card.Text>\r\n                <Card.Subtitle>Notes</Card.Subtitle>\r\n                <Card.Text>\r\n                View the selected workout notes here.\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </Accordion.Body>\r\n        </Accordion.Item>\r\n      </Accordion>\r\n      <Accordion defaultActiveKey=\"0\">\r\n        <Accordion.Item>\r\n          <Accordion.Header>Planner</Accordion.Header>\r\n          <Accordion.Body>\r\n            <Card border=\"info\">\r\n              <Card.Body>\r\n                <Container style={styles.helpIcon}>\r\n                  <FontAwesomeIcon icon={faBrain} size=\"3x\" />\r\n                </Container>\r\n                <Card.Header style={{ textAlign: theme.alignments.center }}>\r\n                  <Card.Title>Planner</Card.Title>\r\n                </Card.Header>\r\n                <br />\r\n                <Card.Subtitle>Select plan: Plans</Card.Subtitle>\r\n                <Card.Text>\r\n                The saved plans will show up here in alphabetical order. By clicking a plan,\r\n                the plan will appear under the Selected Plan tab.\r\n                </Card.Text>\r\n                <Card.Subtitle>Selected Plan</Card.Subtitle>\r\n                <Card.Text>\r\n                Here the plan that was selected from Select plan dropdown list will be shown.\r\n                </Card.Text>\r\n                <Card.Subtitle>Delete</Card.Subtitle>\r\n                <Card.Text>\r\n                By clicking the Delete button on the Planner Tab page and selecting OK from the\r\n                dialog &rsquo;Yes, I understand that his action is irreversible and I wish to delete\r\n                my plan.&rsquo;, the selected plan will be deleted.\r\n                  <br />\r\n                  <FontAwesomeIcon icon={faInfo} color=\"blue\" /> NB If there wasn&rsquo;t a plan\r\n                selected when clicking the OK button from the dialog, it will not delete anything.\r\n                </Card.Text>\r\n                <Card.Subtitle>Create a New Plan Name</Card.Subtitle>\r\n                <Card.Text>\r\n                This should represent generally the type of plan or memo you are going to\r\n                execute, e.g. Plan A, Pizza Recipe, Workout Schedule, Road to Guitar Excellence or\r\n                Random thoughts just to name a few.\r\n                </Card.Text>\r\n                <Card.Subtitle>Create a New Plan Memo</Card.Subtitle>\r\n                <Card.Text>\r\n                Here you can again use your imagination to set up whatever kind of memo you want\r\n                for you plan. As an example, you could write down the instructions when something\r\n                important is supposed to happen like &rsquo;MONDAYS and WEDNESDAYS: Upper body&rsquo;.\r\n                </Card.Text>\r\n                <Card.Subtitle>Save</Card.Subtitle>\r\n                <Card.Text>\r\n                By clicking the Save button on the Planner Tab page, the fields of the Planner form\r\n                with the currently input text will be saved to your user account as a new plan.\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </Accordion.Body>\r\n        </Accordion.Item>\r\n      </Accordion>\r\n      <Accordion defaultActiveKey=\"0\">\r\n        <Accordion.Item>\r\n          <Accordion.Header>Profile</Accordion.Header>\r\n          <Accordion.Body>\r\n            <Card border=\"info\">\r\n              <Card.Body>\r\n                <Container style={styles.helpIcon}>\r\n                  <FontAwesomeIcon icon={faUser} size=\"3x\" />\r\n                </Container>\r\n                <Card.Header style={{ textAlign: theme.alignments.center }}>\r\n                  <Card.Title>Profile</Card.Title>\r\n                </Card.Header>\r\n                <br />\r\n                <Card.Subtitle>Logged in User</Card.Subtitle>\r\n                <Card.Text>\r\n                Here the username of the logged in user is displayed. This field is uneditable.\r\n                </Card.Text>\r\n                <Card.Subtitle>Tooltips</Card.Subtitle>\r\n                <Card.Text>\r\n                The current status of the Tooltips&rsquo; visibility is displayed the first row.\r\n                &rsquo;On&rsquo; means that the Tooltips are visible and &rsquo;Off&rsquo; means\r\n                that they are not visible. Select the desired visibility from the corresponding\r\n                dropdown list between values &rsquo;On&rsquo; and &rsquo;Off&rsquo;. By clicking\r\n                the Save button, the Tooltips visibility will be changed.\r\n                </Card.Text>\r\n                <Card.Subtitle>Change Password</Card.Subtitle>\r\n                <Card.Text>\r\n                Write the password you currently use to login to the Old Password field. Write the new\r\n                password to which you want to change your current password to the New Password field.\r\n                Write the new password you wrote into the New Password field again to the Password\r\n                Confirmation field. By clicking the Save button below the aforementioned password fields,\r\n                the old account password that was used with login, will be changed to the new one.\r\n                </Card.Text>\r\n                <Card.Subtitle>Delete Account</Card.Subtitle>\r\n                <Card.Text>\r\n                By clicking the Delete My Account button on the Profile Tab page and\r\n                selecting OK from the dialog &rsquo;Yes, I understand that his action is irreversible and I wish to delete\r\n                my account.&rsquo;, all account information will be deleted and you will\r\n                be redirected back to the login page.\r\n                  <br />\r\n                  <FontAwesomeIcon icon={faSkullCrossbones} color=\"red\" />\r\n                  <FontAwesomeIcon icon={faInfo} color=\"blue\" /> NB This action is irreversible!\r\n                </Card.Text>\r\n                <Card.Subtitle>Logout</Card.Subtitle>\r\n                <Card.Text>\r\n                By clicking the Log out button on the Profile Tab page, you will log out from the\r\n                Workout Helper App and be redirected back to the login page.\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </Accordion.Body>\r\n        </Accordion.Item>\r\n      </Accordion>\r\n      <br /><br />\r\n      <br /><br />\r\n      <Footer />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Help","import axios from 'axios'\r\n\r\nlet baseUrl = '/welcome/login'\r\n\r\nif (process.env.NODE_ENV === 'test') {\r\n  baseUrl = 'http://localhost:3001/welcome/login'\r\n}\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  baseUrl = '/welcome/login'\r\n}\r\n\r\nconst login = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import React from 'react'\r\nimport { useField } from 'formik'\r\nimport Select from 'react-select'\r\n\r\nimport theme from '../theme'\r\n\r\nconst styles = {\r\n  error: {\r\n    color: theme.colors.errorRed,\r\n  },\r\n  textarea: {\r\n    height: theme.heights.medium,\r\n  },\r\n}\r\n\r\nexport const Checkbox = ({ children, ...props }) => {\r\n  const [field, meta] = useField(props)\r\n\r\n  return (\r\n    <>\r\n      <input type=\"checkbox\" {...field} {...props} />\r\n      {children}\r\n      {meta.touched && meta.error ? (\r\n        <div style={styles.error}>{meta.error}</div>\r\n      ) : (\r\n        null\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport const SelectValue = ({ label, ...props }) => {\r\n  const [field, meta, { setValue, setTouched }] = useField(props)\r\n  const options = props.children.map(o => ({\r\n    value: o.props.value,\r\n    label: o.props.children,\r\n  }))\r\n\r\n  const onChange = ({ value }) => {\r\n    setValue(value)\r\n  }\r\n\r\n  return (\r\n    <div className=\"mb-3\">\r\n      <label htmlFor={props.id || props.name} className=\"form-label\">\r\n        {label}\r\n      </label>\r\n      <Select\r\n        defaultValue={options.find(o => o.value === field.value)}\r\n        options={options}\r\n        onChange={onChange}\r\n        onBlur={setTouched}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <div style={styles.error}>{meta.error}</div>\r\n      ) : (\r\n        null\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const TextArea = ({ ...props }) => {\r\n  const [field, meta] = useField(props)\r\n\r\n  return (\r\n    <>\r\n      <textarea type=\"text\" {...field} {...props} style={styles.textarea} />\r\n      {meta.touched && meta.error ? (\r\n        <div style={styles.error}>{meta.error}</div>\r\n      ) : (\r\n        null\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport const TextInput = ({ ...props }) => {\r\n  const [field, meta] = useField(props)\r\n\r\n  return (\r\n    <>\r\n      <input type=\"text-input\" {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <div style={styles.error}>{meta.error}</div>\r\n      ) : (\r\n        null\r\n      )}\r\n    </>\r\n  )\r\n}","import React from 'react'\r\n\r\nimport {\r\n  Alert, Spinner,\r\n} from 'react-bootstrap'\r\n\r\nimport theme from '../theme'\r\n\r\nconst styles = {\r\n  bold: {\r\n    fontWeight: theme.fontWeights.bold,\r\n  },\r\n  error: {\r\n    color: theme.colors.errorRed,\r\n    fontSize: theme.fontSizes.subheading,\r\n    padding: theme.paddings.large,\r\n    textAlign: theme.alignments.center,\r\n  },\r\n  regular: {\r\n    fontSize: theme.fontSizes.subheading,\r\n    padding: theme.paddings.large,\r\n    textAlign: theme.alignments.center,\r\n  }\r\n}\r\n\r\nconst Notification = ({ text, error, name }) => {\r\n  return (\r\n    error ? (\r\n      <Alert style={styles.error} variant='secondary'>\r\n        <Spinner animation=\"grow\" size=\"sm\" variant=\"light\" />\r\n        &nbsp;&nbsp;{text}&nbsp;&nbsp;\r\n        <Spinner animation=\"grow\" size=\"sm\" variant=\"light\" />\r\n      </Alert>\r\n    ) : (\r\n      <Alert style={styles.regular} variant='secondary'>\r\n        {text.includes('You logged out.') || text.includes('Your profile has been removed.') ? (\r\n          <>\r\n            &nbsp;&nbsp;{text}&nbsp;&nbsp;\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Spinner animation=\"grow\" size=\"sm\" variant=\"light\"\r\n              id=\"notificationGrowLeft\" />\r\n            &nbsp;&nbsp;{text}&nbsp;&nbsp;\r\n            <Spinner animation=\"grow\" size=\"sm\" variant=\"light\"\r\n              id=\"notificationGrowRight\" />\r\n          </>\r\n        )}\r\n        {text.includes('Registering was successful for username:')\r\n          && <div style={styles.bold}>{name}</div>}\r\n        {text.includes('A new plan was added:')\r\n          && <div style={styles.bold}>{name}</div>}\r\n        {text.includes('A new workout was added:')\r\n          && <div style={styles.bold}>{name}</div>}\r\n      </Alert>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Notification","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport storage from '../utils/storage'\r\n\r\nimport {\r\n  Nav, Navbar,\r\n} from 'react-bootstrap'\r\n\r\nimport theme from '../theme'\r\n\r\nconst styles = {\r\n  title: {\r\n    color: theme.colors.darkBlue,\r\n    fontFamily: theme.fontFamilies.quantico,\r\n    fontSize: theme.fontSizes.title,\r\n    margin: theme.margins.medium,\r\n    padding: theme.paddings.large,\r\n    textAlign: theme.alignments.center,\r\n  },\r\n  welcomeTab: {\r\n    color: theme.colors.darkBlue,\r\n    fontFamily: theme.fontFamilies.quantico,\r\n    fontSize: theme.fontSizes.subheading,\r\n    padding: theme.paddings.large,\r\n    textDecoration: theme.textDecorations.none,\r\n  },\r\n}\r\n\r\nconst Welcome = ({ loading }) => {\r\n  const [key, setKey] = useState(storage.loadTab())\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={styles.title}>Workout Helper</h1>\r\n      {loading ? (\r\n        null\r\n      ) : (\r\n        <Navbar sticky=\"top\" collapseOnSelect expand=\"lg\" bg=\"light\">\r\n          <Navbar.Toggle />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"m-auto\" variant=\"tabs\" activeKey={key} onSelect={(k) => setKey(k)}>\r\n              <Nav.Link eventKey=\"login\" href=\"#\" as=\"span\">\r\n                <Link style={styles.welcomeTab} to=\"/welcome/login\" id=\"loginHeader\">\r\n                  Login\r\n                </Link>\r\n              </Nav.Link>\r\n              <Nav.Link eventKey=\"register\" href=\"#\" as=\"span\">\r\n                <Link style={styles.welcomeTab} to=\"/welcome/register\" id=\"registerHeader\">\r\n                  Register\r\n                </Link>\r\n              </Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      )}\r\n      <br />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Welcome","import React, {\r\n  useEffect, useState,\r\n} from 'react'\r\nimport {\r\n  useDispatch, useSelector,\r\n} from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport {\r\n  Formik, Form as FormikForm,\r\n} from 'formik'\r\nimport * as yup from 'yup'\r\nimport { login } from '../reducers/userReducer'\r\nimport loginService from '../services/loginService'\r\nimport storage from '../utils/storage'\r\n\r\nimport {\r\n  Button, Container, FloatingLabel, Spinner,\r\n} from 'react-bootstrap'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSignInAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { TextInput } from './FormField'\r\n\r\nimport theme from '../theme'\r\nimport Footer from './Footer'\r\nimport Notification from './Notification'\r\nimport Welcome from './Welcome'\r\n\r\nconst styles = {\r\n  button: {\r\n    display: theme.displays.flex,\r\n    justifyContent: theme.justifications.spaceBetween,\r\n    paddingTop: theme.paddings.small,\r\n    paddingRight: theme.paddings.zero,\r\n    paddingBottom: theme.paddings.small,\r\n    paddingLeft: theme.paddings.zero,\r\n  },\r\n  error: {\r\n    color: theme.colors.errorRed,\r\n  },\r\n  notification: {\r\n    fontSize: theme.fontSizes.subheading,\r\n    padding: theme.paddings.large,\r\n    textAlign: theme.alignments.center,\r\n  },\r\n}\r\n\r\nconst initialValues = {\r\n  username: '',\r\n  password: '',\r\n}\r\n\r\nconst validationSchema = yup.object().shape({\r\n  username: yup\r\n    .string()\r\n    .required('Username is required'),\r\n  password: yup\r\n    .string()\r\n    .required('Password is required'),\r\n})\r\n\r\nexport const LoginContainer = ({ onSubmit, loading }) => {\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={onSubmit}\r\n    >\r\n      {({ handleSubmit, isValid, dirty }) =>\r\n        <LoginForm onSubmit={handleSubmit} isValid={isValid}\r\n          dirty={dirty} loading={loading} />\r\n      }\r\n    </Formik>\r\n  )\r\n}\r\n\r\nconst LoginForm = ({ onSubmit, isValid, dirty, loading }) => {\r\n  return (\r\n    <FormikForm>\r\n      <div className=\"form-group mb-3\">\r\n        <FloatingLabel label=\"Username\">\r\n          {loading ? (\r\n            <TextInput name=\"username\" className=\"form-control\" type=\"text\"\r\n              placeholder=\"Username\" id=\"usernameFieldLogin\" disabled />\r\n          ) : (\r\n            <TextInput name=\"username\" className=\"form-control\" type=\"text\"\r\n              placeholder=\"Username\" id=\"usernameFieldLogin\" />\r\n          )}\r\n        </FloatingLabel>\r\n      </div>\r\n\r\n      <div className=\"form-group mb-3\">\r\n        <FloatingLabel label=\"Password\">\r\n          {loading ? (\r\n            <TextInput name=\"password\" className=\"form-control\" type=\"password\"\r\n              placeholder=\"Password\" id=\"passwordFieldLogin\" disabled />\r\n          ) : (\r\n            <TextInput name=\"password\" className=\"form-control\" type=\"password\"\r\n              placeholder=\"Password\" id=\"passwordFieldLogin\" />\r\n          )}\r\n        </FloatingLabel>\r\n      </div>\r\n\r\n      <Container style={styles.button}>\r\n        <Button\r\n          onClick={onSubmit}\r\n          disabled={!dirty || !isValid}\r\n          type=\"submit\"\r\n          size=\"lg\"\r\n          variant=\"outline-dark\"\r\n          id=\"loginButton\">\r\n          {loading ? (\r\n            <>\r\n              Login&nbsp;&nbsp;<Spinner animation=\"border\" size=\"sm\"\r\n                id=\"loginButtonSpinner\" />\r\n            </>\r\n          ) : (\r\n            <>\r\n              Login&nbsp;&nbsp;<FontAwesomeIcon icon={faSignInAlt} size=\"sm\"\r\n                id=\"loginButtonSignInIcon\" />\r\n            </>\r\n          )}\r\n        </Button>\r\n      </Container>\r\n    </FormikForm>\r\n  )\r\n}\r\n\r\nconst Login = () => {\r\n  const [text, setText] = useState(null)\r\n  const [redirectMessage, setRedirectMessage] = useState(null)\r\n  const [isError, setIsError] = useState(false)\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const user = useSelector(state => state.user)\r\n\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    clearTimeout(storage.loadTimeout())\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    // If user does logout, or profile delete, then corresponding message is displayed\r\n    if (user.length > 0 && typeof(user) === 'string') {\r\n      setText(user)\r\n    }\r\n  }, [dispatch])\r\n\r\n  storage.saveTab('login')\r\n\r\n  const onSubmit = async (values, { setSubmitting, resetForm }) => {\r\n    const username = values.username\r\n    const password = values.password\r\n    setLoading(true)\r\n    setSubmitting(false)\r\n    resetForm(initialValues)\r\n    try {\r\n      const user = await loginService.login({\r\n        username, password\r\n      })\r\n      storage.saveUser(user)\r\n      setRedirectMessage('You are being redirected to the Dashboard ...')\r\n      const timeoutLogin = setTimeout(() => {\r\n        setRedirectMessage(null)\r\n        dispatch(login(user))\r\n        history.push('/dashboard/workout')\r\n      }, 4000)\r\n      storage.saveTimeout(timeoutLogin)\r\n    } catch(error) {\r\n      setIsError(true)\r\n      setText('Error: Username or password is not valid')\r\n      const timeoutError = setTimeout(() => {\r\n        setIsError(false)\r\n        setText(null)\r\n        setLoading(false)\r\n        history.push('/')\r\n        history.push('/welcome/login')\r\n      }, 3000)\r\n      storage.saveTimeout(timeoutError)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Welcome loading={loading} />\r\n      {text !== null && <Notification text={text}\r\n        error={isError} />}\r\n      {redirectMessage !== null && <Notification text={redirectMessage}\r\n        error={isError} />}\r\n      <LoginContainer onSubmit={onSubmit} loading={loading} />\r\n      <br />\r\n      <Footer />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Login","import axios from 'axios'\r\nimport storage from '../utils/storage'\r\n\r\nlet baseUrl = '/dashboard/planner'\r\n\r\nconst getConfig = () => {\r\n  return {\r\n    headers: { Authorization: `bearer ${storage.loadUser().token}` }\r\n  }\r\n}\r\n\r\nif (process.env.NODE_ENV === 'test') {\r\n  baseUrl = 'http://localhost:3001/dashboard/planner'\r\n}\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  baseUrl = '/dashboard/planner'\r\n}\r\n\r\nconst createNewPlan = async (newPlan) => {\r\n  const response = await axios.post(`${baseUrl}/newPlan`, newPlan, getConfig())\r\n  return response.data\r\n}\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.post(`${baseUrl}/plans`, {}, getConfig())\r\n  return response.data\r\n}\r\n\r\nexport default { createNewPlan, getAll }","import plannerService from '../services/plannerService'\r\n\r\nconst plannerReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n  case 'CREATE_PLAN':\r\n    return action.data\r\n  case 'DELETE_PLAN':\r\n    return 'Your plan has been removed.'\r\n  case 'GET_PLANS':\r\n    return action.data\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const createPlan = (newPlan) => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: 'CREATE_PLAN',\r\n      data: {\r\n        plan: newPlan,\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const deletePlan = () => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: 'DELETE_PLAN',\r\n    })\r\n  }\r\n}\r\n\r\nexport const getPlans = () => {\r\n  return async dispatch => {\r\n    const data = await plannerService.getAll()\r\n    dispatch({\r\n      type: 'GET_PLANS',\r\n      data: {\r\n        plans: data,\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default plannerReducer","import axios from 'axios'\r\nimport storage from '../utils/storage'\r\n\r\nlet baseUrl = '/api/delete'\r\n\r\nconst getConfig = () => {\r\n  return {\r\n    headers: { Authorization: `bearer ${storage.loadUser().token}` }\r\n  }\r\n}\r\n\r\nif (process.env.NODE_ENV === 'test') {\r\n  baseUrl = 'http://localhost:3001/api/delete'\r\n}\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  baseUrl = '/api/delete'\r\n}\r\n\r\nconst deletePlan = async (plan) => {\r\n  const response = await axios.delete(`${baseUrl}/plan/${plan}`, getConfig())\r\n  return response.data\r\n}\r\n\r\nconst deleteUser = async (username) => {\r\n  const response = await axios.delete(`${baseUrl}/${username}`, getConfig())\r\n  return response.data\r\n}\r\n\r\nconst deleteWorkout = async (workout) => {\r\n  const response = await axios.delete(`${baseUrl}/workout/${workout}`, getConfig())\r\n  return response.data\r\n}\r\n\r\nexport default { deletePlan, deleteUser, deleteWorkout }","import React, {\r\n  useEffect, useState,\r\n} from 'react'\r\nimport {\r\n  useDispatch, useSelector\r\n} from 'react-redux'\r\nimport {\r\n  Formik, Form as FormikForm,\r\n} from 'formik'\r\nimport * as yup from 'yup'\r\nimport {\r\n  createPlan, deletePlan, getPlans,\r\n} from '../reducers/plannerReducer'\r\nimport { getTooltips } from '../reducers/profileReducer'\r\nimport { logout } from '../reducers/userReducer'\r\nimport deleteService from '../services/deleteService'\r\nimport plannerService from '../services/plannerService'\r\nimport storage from '../utils/storage'\r\n\r\nimport {\r\n  Button, Container, FloatingLabel, Nav, Navbar, NavDropdown, OverlayTrigger,\r\n  Spinner, Tab, Tabs,\r\n} from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n  faSave, faTrashAlt,\r\n} from '@fortawesome/free-regular-svg-icons'\r\n\r\nimport {\r\n  TextArea, TextInput,\r\n} from './FormField'\r\n\r\nimport {\r\n  plannerNameTooltip, plannerMemoTooltip,\r\n} from './Tooltips'\r\n\r\nimport theme from '../theme'\r\nimport Dashboard from './Dashboard'\r\nimport Footer from './Footer'\r\nimport Notification from './Notification'\r\n\r\nconst styles = {\r\n  button: {\r\n    display: theme.displays.flex,\r\n    justifyContent: theme.justifications.spaceBetween,\r\n    paddingTop: theme.paddings.small,\r\n    paddingRight: theme.paddings.zero,\r\n    paddingBottom: theme.paddings.small,\r\n    paddingLeft: theme.paddings.zero,\r\n  },\r\n  subtitle: {\r\n    color: theme.colors.darkPink,\r\n    fontFamily: theme.fontFamilies.quantico,\r\n    fontSize: theme.fontSizes.subtitle,\r\n  },\r\n}\r\n\r\nconst initialPlanValues = {\r\n  planName: '',\r\n  planMemo: '',\r\n}\r\n\r\nconst validationPlanSchema = yup.object().shape({\r\n  planName: yup\r\n    .string()\r\n    .min(1, 'Plan name must be at least 1 character long')\r\n    .max(55, 'Plan name must be at most 55 characters long')\r\n    .required('Plan name is required'),\r\n  planMemo: yup\r\n    .string()\r\n    .min(1, 'Plan memo must be at least 1 character long')\r\n    .max(2500, 'Plan memo must be at most 2500 characters long')\r\n    .required('Plan memo is required'),\r\n})\r\n\r\nconst SelectedPlanContainer = ({ plan }) => {\r\n  return (\r\n    <>\r\n      <h3>{plan.planName}</h3>\r\n      <pre>{plan.planName !== '' && plan.planMemo}</pre>\r\n    </>\r\n  )\r\n}\r\n\r\nexport const DeletePlanContainer = ({ onSubmit, loading, plan }) => {\r\n  return (\r\n    <Formik\r\n      initialValues={initialPlanValues}\r\n      onSubmit={onSubmit}\r\n    >\r\n      {({ handleSubmit }) =>\r\n        <DeletePlanForm onSubmit={handleSubmit} loading={loading} plan={plan} />\r\n      }\r\n    </Formik>\r\n  )\r\n}\r\n\r\nconst DeletePlanForm = ({ onSubmit, loading, plan }) => {\r\n  return (\r\n    <FormikForm>\r\n      <div className=\"form-group mb-3\">\r\n        <Container style={styles.button}>\r\n          <Button\r\n            onClick={onSubmit}\r\n            disabled={loading || !plan}\r\n            type=\"submit\"\r\n            size=\"lg\"\r\n            variant=\"outline-danger\"\r\n            id=\"plannerPlanDeleteButton\">\r\n            {loading ? (\r\n              <>\r\n                Delete&nbsp;&nbsp;<Spinner animation=\"border\" size=\"sm\"\r\n                  id=\"plannerPlanDeleteButtonSpinner\" />\r\n              </>\r\n            ) : (\r\n              <>\r\n                Delete&nbsp;&nbsp;<FontAwesomeIcon icon={faTrashAlt} size=\"sm\"\r\n                  id=\"plannerPlanDeleteButtonTrashIcon\" />\r\n              </>\r\n            )}\r\n          </Button>\r\n        </Container>\r\n      </div>\r\n    </FormikForm>\r\n  )\r\n}\r\n\r\nexport const PlannerContainer = ({ onSubmit, loading, tooltips }) => {\r\n  return (\r\n    <Formik\r\n      initialValues={initialPlanValues}\r\n      validationSchema={validationPlanSchema}\r\n      onSubmit={onSubmit}\r\n    >\r\n      {({ handleSubmit, isValid, dirty }) =>\r\n        <PlannerForm onSubmit={handleSubmit} isValid={isValid} dirty={dirty}\r\n          loading={loading} tooltips={tooltips} />\r\n      }\r\n    </Formik>\r\n  )\r\n}\r\n\r\nconst PlannerForm = ({ onSubmit, isValid, dirty, loading, tooltips }) => {\r\n  return (\r\n    <FormikForm>\r\n      <div className=\"form-group mb-3\">\r\n        <Tabs defaultActiveKey=\"newPlanName\" className=\"mb-3\">\r\n          <Tab eventKey=\"newPlanName\" title=\"Create a New Plan Name\" disabled>\r\n            {tooltips ? (\r\n              <OverlayTrigger\r\n                placement=\"top\"\r\n                delay={{ show: 1000, hide: 0 }}\r\n                overlay={plannerNameTooltip}\r\n              >\r\n                <FloatingLabel label=\"Name\">\r\n                  {loading ? (\r\n                    <TextInput name=\"planName\" className=\"form-control\" type=\"text\"\r\n                      placeholder=\"Name\" id=\"planNamePlanner\" disabled />\r\n                  ) : (\r\n                    <TextInput name=\"planName\" className=\"form-control\" type=\"text\"\r\n                      placeholder=\"Name\" id=\"planNamePlanner\" />\r\n                  )}\r\n                </FloatingLabel>\r\n              </OverlayTrigger>\r\n            ) : (\r\n              <FloatingLabel label=\"Name\">\r\n                {loading ? (\r\n                  <TextInput name=\"planName\" className=\"form-control\" type=\"text\"\r\n                    placeholder=\"Name\" id=\"planNamePlanner\" disabled />\r\n                ) : (\r\n                  <TextInput name=\"planName\" className=\"form-control\" type=\"text\"\r\n                    placeholder=\"Name\" id=\"planNamePlanner\" />\r\n                )}\r\n              </FloatingLabel>\r\n            )}\r\n          </Tab>\r\n        </Tabs>\r\n      </div>\r\n\r\n      <div className=\"form-group mb-3\">\r\n        <Tabs defaultActiveKey=\"newPlanMemo\" className=\"mb-3\">\r\n          <Tab eventKey=\"newPlanMemo\" title=\"Create a New Plan Memo\" disabled>\r\n            {tooltips ? (\r\n              <OverlayTrigger\r\n                placement=\"top\"\r\n                delay={{ show: 1000, hide: 0 }}\r\n                overlay={plannerMemoTooltip}\r\n              >\r\n                <FloatingLabel label=\". .../\">\r\n                  {loading ? (\r\n                    <TextArea name=\"planMemo\" className=\"form-control\" as=\"textarea\"\r\n                      placeholder=\"\" id=\"planMemoPlanner\" disabled />\r\n                  ) : (\r\n                    <TextArea name=\"planMemo\" className=\"form-control\" as=\"textarea\"\r\n                      placeholder=\"\" id=\"planMemoPlanner\" />\r\n                  )}\r\n                </FloatingLabel>\r\n              </OverlayTrigger>\r\n            ) : (\r\n              <FloatingLabel label=\". .../\">\r\n                {loading ? (\r\n                  <TextArea name=\"planMemo\" className=\"form-control\" as=\"textarea\"\r\n                    placeholder=\"\" id=\"planMemoPlanner\" disabled />\r\n                ) : (\r\n                  <TextArea name=\"planMemo\" className=\"form-control\" as=\"textarea\"\r\n                    placeholder=\"\" id=\"planMemoPlanner\" />\r\n                )}\r\n              </FloatingLabel>\r\n            )}\r\n          </Tab>\r\n        </Tabs>\r\n      </div>\r\n\r\n      <Container style={styles.button}>\r\n        <Button\r\n          onClick={onSubmit}\r\n          disabled={!dirty || !isValid}\r\n          type=\"submit\"\r\n          size=\"lg\"\r\n          variant=\"outline-primary\"\r\n          id=\"plannerPlanSaveButton\">\r\n          {loading ? (\r\n            <>\r\n              Save&nbsp;&nbsp;<Spinner animation=\"border\" size=\"sm\"\r\n                id=\"plannerPlanSaveButtonSpinner\" />\r\n            </>\r\n          ) : (\r\n            <>\r\n              Save&nbsp;&nbsp;<FontAwesomeIcon icon={faSave} size=\"sm\"\r\n                id=\"plannerPlanSaveButtonSaveIcon\" />\r\n            </>\r\n          )}\r\n        </Button>\r\n      </Container>\r\n    </FormikForm>\r\n  )\r\n}\r\n\r\nconst createPlansList = (plans) => {\r\n  const plansList = []\r\n  plans.map((plan, index) => {\r\n    plansList.push(\r\n      <NavDropdown.Item\r\n        key={index}\r\n        eventKey={plan.planName}\r\n        id={plan.planName}\r\n      >\r\n        {plan.planName}\r\n      </NavDropdown.Item>)\r\n  })\r\n\r\n  return plansList\r\n}\r\n\r\nconst createPlanMemo = (selectedPlan, plans) => {\r\n  let memo = null\r\n\r\n  plans && plans.map(p => {\r\n    p.planName === selectedPlan ? memo = p : null\r\n  })\r\n\r\n  return memo.planMemo\r\n}\r\n\r\nconst Planner = () => {\r\n  const [newName, setNewName] = useState(null)\r\n  const [text, setText] = useState(null)\r\n  const [isError, setIsError] = useState(false)\r\n  const [loading, setLoading] = useState(false)\r\n  const [selectedPlan, setSelectedPlan] = useState(storage.loadPlan())\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (storage.loadUser() === null) {\r\n      dispatch(logout())\r\n    } else {\r\n      clearTimeout(storage.loadTimeout())\r\n      dispatch(getTooltips())\r\n      dispatch(getPlans())\r\n    }\r\n  }, [])\r\n\r\n  storage.saveTab('planner')\r\n\r\n  const plans = useSelector(state => state.planner.plans)\r\n  const tooltips = useSelector(state => state.profile.tooltips)\r\n\r\n  const planList = plans\r\n    && createPlansList(\r\n      plans.sort((p1, p2) => (p1.planName > p2.planName) - (p1.planName < p2.planName))\r\n    )\r\n\r\n  const handleDeletePlan = async () => {\r\n    if (storage.loadUser() === null) {\r\n      dispatch(logout())\r\n    } else {\r\n      if (confirm('Yes, I understand that his action is irreversible and I wish to delete my plan.')) {\r\n        if (selectedPlan.planName === '' || selectedPlan === null) {\r\n          setText('No plan was selected.')\r\n          const timeout = setTimeout(() => {\r\n            setText(null)\r\n          }, 3000)\r\n          storage.saveTimeout(timeout)\r\n        } else {\r\n          setLoading(true)\r\n          try {\r\n            await deleteService.deletePlan(selectedPlan.planName)\r\n            storage.savePlan(null)\r\n            setSelectedPlan(null)\r\n            dispatch(deletePlan())\r\n            dispatch(getPlans())\r\n            setText('Plan was deleted.')\r\n            const timeoutDelete = setTimeout(() => {\r\n              setText(null)\r\n              setLoading(false)\r\n            }, 3000)\r\n            storage.saveTimeout(timeoutDelete)\r\n          } catch(error) {\r\n            if (storage.loadUser() !== null) {\r\n              setIsError(true)\r\n              setText(error.message)\r\n              const timeoutError = setTimeout(() => {\r\n                setIsError(false)\r\n                setText(null)\r\n                setLoading(false)\r\n              }, 6000)\r\n              storage.saveTimeout(timeoutError)\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        setLoading(true)\r\n        setText('Plan delete cancelled.')\r\n        const timeoutCancel = setTimeout(() => {\r\n          setText(null)\r\n          setLoading(false)\r\n        }, 3000)\r\n        storage.saveTimeout(timeoutCancel)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleAddPlan = async (values, { setSubmitting, resetForm }) => {\r\n    if (storage.loadUser() === null) {\r\n      dispatch(logout())\r\n    } else {\r\n      const planName = values.planName.trim()\r\n      const planMemo = values.planMemo\r\n      setLoading(true)\r\n      setSubmitting(false)\r\n      resetForm(initialPlanValues)\r\n      try {\r\n        const newPlan = await plannerService.createNewPlan({\r\n          planName, planMemo\r\n        })\r\n        dispatch(createPlan(newPlan))\r\n        dispatch(getPlans())\r\n        setNewName(planName)\r\n        setText('A new plan was added:')\r\n        const timeoutPlan = setTimeout(() => {\r\n          setNewName(null)\r\n          setText(null)\r\n          setLoading(false)\r\n        }, 3000)\r\n        storage.saveTimeout(timeoutPlan)\r\n      } catch(error) {\r\n        if (storage.loadUser() !== null) {\r\n          setIsError(true)\r\n          setText(`Error: Plan name was empty | Plan name is already in use\r\n           | User logged out`)\r\n          const timeoutError = setTimeout(() => {\r\n            setIsError(false)\r\n            setText(null)\r\n            setLoading(false)\r\n          }, 6000)\r\n          storage.saveTimeout(timeoutError)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Dashboard />\r\n      <Navbar variant=\"light\" bg=\"light\" expand=\"lg\">\r\n        <Container>\r\n          <Navbar.Brand href=\"#\">Select plan: </Navbar.Brand>\r\n          <Navbar.Toggle />\r\n          <Navbar.Collapse>\r\n            <Nav\r\n              onSelect={(p) => {\r\n                if (storage.loadUser() === null) {\r\n                  dispatch(logout())\r\n                } else {\r\n                  const plan = {\r\n                    planName: p,\r\n                    planMemo: createPlanMemo(p, plans)\r\n                  }\r\n                  storage.savePlan(plan)\r\n                  setSelectedPlan(plan)\r\n                  dispatch(getPlans())\r\n                }\r\n              }}\r\n            >\r\n              <NavDropdown\r\n                title=\"Plans\"\r\n                menuVariant=\"light\"\r\n                id=\"plannerSelectPlanDropdown\"\r\n              >\r\n                {planList}\r\n              </NavDropdown>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      <h2 style={styles.subtitle}>Planner</h2>\r\n      {text !== null && <Notification text={text}\r\n        error={isError} name={newName} />}\r\n      <Tabs defaultActiveKey=\"selectedPlan\" className=\"mb-4\">\r\n        <Tab eventKey=\"selectedPlan\" title=\"Selected Plan\" disabled />\r\n      </Tabs>\r\n      {selectedPlan !== null ? (\r\n        <SelectedPlanContainer plan={selectedPlan} />\r\n      ) : (\r\n        null\r\n      )}\r\n      <DeletePlanContainer onSubmit={handleDeletePlan} loading={loading}\r\n        plan={selectedPlan} />\r\n      <PlannerContainer onSubmit={handleAddPlan} loading={loading}\r\n        tooltips={tooltips} />\r\n      <br /><br />\r\n      <br /><br />\r\n      <Footer />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Planner","import React, {\r\n  useEffect, useState,\r\n} from 'react'\r\nimport {\r\n  useDispatch, useSelector,\r\n} from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport {\r\n  Formik, Form as FormikForm,\r\n} from 'formik'\r\nimport * as yup from 'yup'\r\nimport {\r\n  changedPassword, getTooltips,\r\n} from '../reducers/profileReducer'\r\nimport {\r\n  deleteUser, logout\r\n} from '../reducers/userReducer'\r\nimport deleteService from '../services/deleteService'\r\nimport profileService from '../services/profileService'\r\nimport storage from '../utils/storage'\r\n\r\nimport {\r\n  Button, Container, Form, Spinner, Tab, Tabs,\r\n} from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n  faSave, faShareSquare,\r\n} from '@fortawesome/free-regular-svg-icons'\r\nimport { faSkullCrossbones } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport {\r\n  SelectValue, TextInput,\r\n} from './FormField'\r\n\r\nimport theme from '../theme'\r\nimport Dashboard from './Dashboard'\r\nimport Notification from './Notification'\r\nimport Footer from './Footer'\r\n\r\nconst styles = {\r\n  button: {\r\n    display: theme.displays.flex,\r\n    justifyContent: theme.justifications.spaceBetween,\r\n    paddingTop: theme.paddings.small,\r\n    paddingRight: theme.paddings.zero,\r\n    paddingBottom: theme.paddings.small,\r\n    paddingLeft: theme.paddings.zero,\r\n  },\r\n  password: {\r\n    marginTop: theme.margins.tiny,\r\n  },\r\n  subtitle: {\r\n    color: theme.colors.darkPink,\r\n    fontFamily: theme.fontFamilies.quantico,\r\n    fontSize: theme.fontSizes.subtitle,\r\n  },\r\n}\r\n\r\n// Formik needs initialValues, even if they are not used\r\nconst initialValues = {\r\n  '':'',\r\n}\r\n\r\nconst initialTooltipsValue = {\r\n  tooltips: true,\r\n}\r\n\r\nconst initialPasswordValues = {\r\n  oldPassword: '',\r\n  newPassword: '',\r\n  passwordConfirmation: '',\r\n}\r\n\r\nconst validationSchema = yup.object().shape({\r\n  oldPassword: yup\r\n    .string()\r\n    .required('Old password is required'),\r\n  newPassword: yup\r\n    .string()\r\n    .min(8, 'Password must be at least 8 characters long')\r\n    .max(50, 'Password must be at most 50 characters long')\r\n    .required('New password is required')\r\n    .matches(\r\n      /^(?=.*\\d)(?=.*[\\W_]+)(?=.*[a-z])(?=.*[A-Z])(?!.*\\s)(?!.*[åäöœæøÅÄÖŒÆØ]).{8,50}$/,\r\n      `Password must have at least one lowercase letter, one uppercase letter,\r\n      one number, one special character, no white spaces and no scands`\r\n    ),\r\n  passwordConfirmation: yup\r\n    .string()\r\n    .required('Password confirmation is required')\r\n    .oneOf([yup.ref('newPassword'), null],\r\n      'Password confirmation must match the new password',\r\n    ),\r\n})\r\n\r\nconst LoggedInUser = ({ user }) => {\r\n  return (\r\n    <div className=\"form-group mb-4\">\r\n      <Form.Group controlId=\"formProfileLoggedin\">\r\n        <Tabs defaultActiveKey=\"loggedin\" className=\"mb-4\">\r\n          <Tab eventKey=\"loggedin\" title=\"Logged in User\" disabled>\r\n            <Form.Control type=\"text\" placeholder={user.username} disabled />\r\n          </Tab>\r\n        </Tabs>\r\n      </Form.Group>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const ToggleTooltipsContainer = ({ onSubmit, loading, tooltips }) => {\r\n  return (\r\n    <Formik\r\n      initialValues={initialTooltipsValue}\r\n      onSubmit={onSubmit}\r\n    >\r\n      {({ handleSubmit, dirty  }) =>\r\n        <ToggleTooltipsForm onSubmit={handleSubmit} dirty={dirty}\r\n          loading={loading} tooltips={tooltips} />\r\n      }\r\n    </Formik>\r\n  )\r\n}\r\n\r\nconst ToggleTooltipsForm = ({ onSubmit, dirty, loading, tooltips }) => {\r\n  const options = [\r\n    { value: 'true', label: 'On' },\r\n    { value: 'false', label: 'Off' },\r\n  ]\r\n\r\n  return (\r\n    <FormikForm>\r\n      <div className=\"form-group mb-3\">\r\n        <Tabs defaultActiveKey=\"tooltips\" className=\"mb-4\">\r\n          <Tab eventKey=\"tooltips\" title=\"Tooltips\" disabled>\r\n            <Form.Control type=\"text\"\r\n              placeholder={tooltips.tooltips === true ? 'On' : 'Off'} disabled />\r\n            <SelectValue name=\"tooltips\" className=\"form-control\" as=\"select\"\r\n              id=\"formProfileTooltips\">\r\n              {options.map(o => (\r\n                <option key={o.value} value={o.value} >\r\n                  {o.label}\r\n                </option>\r\n              ))}\r\n            </SelectValue>\r\n\r\n            <Container style={styles.button}>\r\n              <Button\r\n                onClick={onSubmit}\r\n                disabled={!dirty || loading}\r\n                type=\"submit\"\r\n                size=\"lg\"\r\n                variant=\"outline-primary\"\r\n                id=\"profileTooltipsSaveButton\">\r\n                {loading ? (\r\n                  <>\r\n                    Save&nbsp;&nbsp;<Spinner animation=\"border\" size=\"sm\"\r\n                      id=\"profileTooltipsSaveButtonSpinner\" />\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    Save&nbsp;&nbsp;<FontAwesomeIcon icon={faSave} size=\"sm\"\r\n                      id=\"profileTooltipsSaveButtonSaveIcon\" />\r\n                  </>\r\n                )}\r\n              </Button>\r\n            </Container>\r\n          </Tab>\r\n        </Tabs>\r\n      </div>\r\n    </FormikForm>\r\n  )\r\n}\r\n\r\nexport const ChangePasswordContainer = ({ onSubmit, loading }) => {\r\n  return (\r\n    <Formik\r\n      initialValues={initialPasswordValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={onSubmit}\r\n    >\r\n      {({ handleSubmit, isValid, dirty }) =>\r\n        <ChangePasswordForm onSubmit={handleSubmit} isValid={isValid}\r\n          dirty={dirty} loading={loading} />\r\n      }\r\n    </Formik>\r\n  )\r\n}\r\n\r\nconst ChangePasswordForm = ({ onSubmit, isValid, dirty, loading }) => {\r\n  return (\r\n    <FormikForm>\r\n      <div className=\"form-group mb-3\">\r\n        <Tabs defaultActiveKey=\"password\" className=\"mb-4\">\r\n          <Tab eventKey=\"password\" title=\"Change Password\" className=\"mb-3\" disabled>\r\n            {loading ? (\r\n              <TextInput name=\"oldPassword\" className=\"form-control\" type=\"password\"\r\n                placeholder=\"Old Password\" id=\"formProfileOldPassword\" disabled />\r\n            ) : (\r\n              <TextInput name=\"oldPassword\" className=\"form-control\" type=\"password\"\r\n                placeholder=\"Old Password\" id=\"formProfileOldPassword\" />\r\n            )}\r\n            {loading ? (\r\n              <TextInput style={styles.password} name=\"newPassword\" className=\"form-control\"\r\n                type=\"password\" placeholder=\"New Password\" id=\"formProfileNewPassword\" disabled />\r\n            ) : (\r\n              <TextInput style={styles.password} name=\"newPassword\" className=\"form-control\"\r\n                type=\"password\" placeholder=\"New Password\" id=\"formProfileNewPassword\" />\r\n            )}\r\n            {loading ? (\r\n              <TextInput style={styles.password} name=\"passwordConfirmation\" className=\"form-control\"\r\n                type=\"password\" placeholder=\"Password Confirmation\" id=\"formProfilePasswordConfirmation\" disabled />\r\n            ) : (\r\n              <TextInput style={styles.password} name=\"passwordConfirmation\" className=\"form-control\"\r\n                type=\"password\" placeholder=\"Password Confirmation\" id=\"formProfilePasswordConfirmation\" />\r\n            )}\r\n          </Tab>\r\n        </Tabs>\r\n\r\n        <Container style={styles.button}>\r\n          <Button\r\n            onClick={onSubmit}\r\n            disabled={!dirty || !isValid}\r\n            type=\"submit\"\r\n            size=\"lg\"\r\n            variant=\"outline-primary\"\r\n            id=\"profilePasswordSaveButton\">\r\n            {loading ? (\r\n              <>\r\n                Save&nbsp;&nbsp;<Spinner animation=\"border\" size=\"sm\"\r\n                  id=\"profilePasswordSaveButtonSpinner\" />\r\n              </>\r\n            ) : (\r\n              <>\r\n                Save&nbsp;&nbsp;<FontAwesomeIcon icon={faSave} size=\"sm\"\r\n                  id=\"profilePasswordSaveButtonSaveIcon\" />\r\n              </>\r\n            )}\r\n          </Button>\r\n        </Container>\r\n      </div>\r\n    </FormikForm>\r\n  )\r\n}\r\n\r\nexport const DeleteProfileContainer = ({ onSubmit, loading }) => {\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      onSubmit={onSubmit}\r\n    >\r\n      {({ handleSubmit }) =>\r\n        <DeleteProfileForm onSubmit={handleSubmit} loading={loading} />\r\n      }\r\n    </Formik>\r\n  )\r\n}\r\n\r\nconst DeleteProfileForm = ({ onSubmit, loading }) => {\r\n  return (\r\n    <FormikForm>\r\n      <div className=\"form-group mb-3\">\r\n        <Tabs defaultActiveKey=\"account\" className=\"mb-3\">\r\n          <Tab eventKey=\"account\" title=\"Delete Account\" disabled>\r\n            <Container style={styles.button}>\r\n              <Button\r\n                onClick={onSubmit}\r\n                disabled={loading}\r\n                type=\"submit\"\r\n                size=\"lg\"\r\n                variant=\"outline-danger\"\r\n                id=\"deleteProfileButton\">\r\n                Delete My Account&nbsp;&nbsp;<FontAwesomeIcon icon={faSkullCrossbones} size=\"sm\" />\r\n              </Button>\r\n            </Container>\r\n          </Tab>\r\n        </Tabs>\r\n      </div>\r\n    </FormikForm>\r\n  )\r\n}\r\n\r\nexport const LogoutContainer = ({ onSubmit }) => {\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      onSubmit={onSubmit}\r\n    >\r\n      {({ handleSubmit }) =>\r\n        <LogoutForm onSubmit={handleSubmit} />\r\n      }\r\n    </Formik>\r\n  )\r\n}\r\n\r\nconst LogoutForm = ({ onSubmit }) => {\r\n  return (\r\n    <FormikForm>\r\n      <div className=\"form-group mb-3\">\r\n        <Tabs defaultActiveKey=\"logout\" className=\"mb-3\">\r\n          <Tab eventKey=\"logout\" title=\"Logout\" disabled>\r\n            <Container style={styles.button}>\r\n              <Button\r\n                onClick={onSubmit}\r\n                type=\"submit\"\r\n                size=\"lg\"\r\n                variant=\"outline-secondary\"\r\n                id=\"logoutButton\">\r\n                Logout&nbsp;&nbsp;<FontAwesomeIcon icon={faShareSquare} size=\"sm\" />\r\n              </Button>\r\n            </Container>\r\n          </Tab>\r\n        </Tabs>\r\n      </div>\r\n    </FormikForm>\r\n  )\r\n}\r\n\r\nconst Profile = () => {\r\n  const [text, setText] = useState(null)\r\n  const [isError, setIsError] = useState(false)\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    if (storage.loadUser() === null) {\r\n      dispatch(logout())\r\n    } else {\r\n      // if user visits another tab while timeout hooks are not yet called, clear timeout before that\r\n      clearTimeout(storage.loadTimeout())\r\n      dispatch(getTooltips())\r\n    }\r\n  }, [])\r\n\r\n  storage.saveTab('profile')\r\n\r\n  const user = useSelector(state => state.user)\r\n  const tooltipsStatus = useSelector(state => state.profile)\r\n\r\n  const handleToggleTooltips = async (values, { setSubmitting }) => {\r\n    if (storage.loadUser() === null) {\r\n      dispatch(logout())\r\n    } else {\r\n      const tooltips = values.tooltips\r\n      if (tooltips !== tooltipsStatus.tooltips.toString()) {\r\n        setLoading(true)\r\n        setSubmitting(false)\r\n        try {\r\n          await profileService.toggleTooltips({\r\n            tooltips\r\n          })\r\n          dispatch(getTooltips())\r\n          setText('Tooltips visibility was changed.')\r\n          const timeoutTooltips = setTimeout(() => {\r\n            setText(null)\r\n            setLoading(false)\r\n          }, 3000)\r\n          storage.saveTimeout(timeoutTooltips)\r\n        } catch(error) {\r\n          if (storage.loadUser() !== null) {\r\n            setIsError(true)\r\n            setText(error.message)\r\n            const timeoutError = setTimeout(() => {\r\n              setIsError(false)\r\n              setText(null)\r\n              setLoading(false)\r\n            }, 6000)\r\n            storage.saveTimeout(timeoutError)\r\n          }\r\n        }\r\n      } else {\r\n        setLoading(true)\r\n        setText('Tooltips visibility is already set to selected value.')\r\n        const timeoutTooltipsAlreadySet = setTimeout(() => {\r\n          setText(null)\r\n          setLoading(false)\r\n        }, 3000)\r\n        storage.saveTimeout(timeoutTooltipsAlreadySet)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleChangePassword = async (values, { setSubmitting, resetForm }) => {\r\n    if (storage.loadUser() === null) {\r\n      dispatch(logout())\r\n    } else {\r\n      const oldPassword = values.oldPassword\r\n      const newPassword = values.newPassword\r\n      setLoading(true)\r\n      setSubmitting(false)\r\n      resetForm(initialValues)\r\n      try {\r\n        await profileService.changePassword({\r\n          oldPassword, newPassword\r\n        })\r\n        dispatch(changedPassword())\r\n        setText('Password was changed.')\r\n        const timeoutPassword = setTimeout(() => {\r\n          setText(null)\r\n          setLoading(false)\r\n        }, 3000)\r\n        storage.saveTimeout(timeoutPassword)\r\n      } catch(error) {\r\n        if (storage.loadUser() !== null) {\r\n          setIsError(true)\r\n          setText('Error: Old password is not valid')\r\n          const timeoutError = setTimeout(() => {\r\n            setIsError(false)\r\n            setText(null)\r\n            setLoading(false)\r\n          }, 6000)\r\n          storage.saveTimeout(timeoutError)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleDeleteProfile = async () => {\r\n    if (storage.loadUser() === null) {\r\n      dispatch(logout())\r\n    } else {\r\n      if (confirm('Yes, I understand that his action is irreversible and I wish to delete my account.')) {\r\n        try {\r\n          await deleteService.deleteUser(user.username)\r\n          storage.logoutUser()\r\n          dispatch(deleteUser())\r\n          history.push('/')\r\n        } catch(error) {\r\n          if (storage.loadUser() !== null) {\r\n            setIsError(true)\r\n            setText(error.message)\r\n          }\r\n        }\r\n      } else {\r\n        setLoading(true)\r\n        // if setTimeout gets called and user is already logged out, don't call hooks\r\n        setText('Profile delete cancelled.')\r\n        const timeout = setTimeout(() => {\r\n          setText(null)\r\n          setLoading(false)\r\n        }, 3000)\r\n        storage.saveTimeout(timeout)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleLogout = () => {\r\n    storage.logoutUser()\r\n    dispatch(logout())\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Dashboard />\r\n      <h2 style={styles.subtitle}>Profile</h2>\r\n      {text !== null && <Notification text={text}\r\n        error={isError} />}\r\n      <LoggedInUser user={user} />\r\n      <ToggleTooltipsContainer onSubmit={handleToggleTooltips} loading={loading}\r\n        tooltips={tooltipsStatus} />\r\n      <ChangePasswordContainer onSubmit={handleChangePassword} loading={loading} />\r\n      <DeleteProfileContainer onSubmit={handleDeleteProfile}  loading={loading} />\r\n      <LogoutContainer onSubmit={handleLogout} />\r\n      <br /><br />\r\n      <br /><br />\r\n      <Footer />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Profile","import axios from 'axios'\r\n\r\nlet baseUrl = '/welcome/register'\r\n\r\nif (process.env.NODE_ENV === 'test') {\r\n  baseUrl = 'http://localhost:3001/welcome/register'\r\n}\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  baseUrl = '/welcome/register'\r\n}\r\n\r\nconst createNew = async (newUser) => {\r\n  const response = await axios.post(baseUrl, newUser)\r\n  return response.data\r\n}\r\n\r\nexport default { createNew }","import React, {\r\n  useEffect, useState\r\n} from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport {\r\n  Formik, Form as FormikForm\r\n} from 'formik'\r\nimport * as yup from 'yup'\r\nimport { createUser } from '../reducers/userReducer'\r\nimport registerService from '../services/registerService'\r\nimport storage from '../utils/storage'\r\n\r\nimport {\r\n  Button, Container, FloatingLabel, Spinner, Tab, Tabs,\r\n} from 'react-bootstrap'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCloudUploadAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport {\r\n  Checkbox, TextInput\r\n} from './FormField'\r\n\r\nimport theme from '../theme'\r\nimport Footer from './Footer'\r\nimport Notification from './Notification'\r\nimport Welcome from './Welcome'\r\n\r\nconst styles = {\r\n  button: {\r\n    display: theme.displays.flex,\r\n    justifyContent: theme.justifications.spaceBetween,\r\n    paddingTop: theme.paddings.small,\r\n    paddingRight: theme.paddings.zero,\r\n    paddingBottom: theme.paddings.small,\r\n    paddingLeft: theme.paddings.zero,\r\n  },\r\n  error: {\r\n    color: theme.colors.errorRed,\r\n  },\r\n  notification: {\r\n    fontSize: theme.fontSizes.subheading,\r\n    padding: theme.paddings.large,\r\n    textAlign: theme.alignments.center,\r\n  },\r\n}\r\n\r\nconst initialValues = {\r\n  username: '',\r\n  password: '',\r\n  passwordConfirmation: '',\r\n  acceptedTerms: false,\r\n}\r\n\r\nconst validationSchema = yup.object().shape({\r\n  username: yup\r\n    .string()\r\n    .min(3, 'Username must be at least 3 characters long')\r\n    .max(30, 'Username must be at most 30 characters long')\r\n    .required('New username is required')\r\n    .matches(\r\n      /^[a-zA-Z0-9_-]{3,30}$/,\r\n      'Username must not contain white spaces or special characters other than _ or -'\r\n    ),\r\n  password: yup\r\n    .string()\r\n    .min(8, 'Password must be at least 8 characters long')\r\n    .max(50, 'Password must be at most 50 characters long')\r\n    .required('New password is required')\r\n    .matches(\r\n      /^(?=.*\\d)(?=.*[\\W_]+)(?=.*[a-z])(?=.*[A-Z])(?!.*\\s)(?!.*[åäöœæøÅÄÖŒÆØ]).{8,50}$/,\r\n      `Password must have at least one lowercase letter, one uppercase letter,\r\n      one number, one special character, no white spaces and no scands`\r\n    ),\r\n  passwordConfirmation: yup\r\n    .string()\r\n    .required('Password confirmation is required')\r\n    .oneOf([yup.ref('password'), null],\r\n      'Password confirmation must match the password',\r\n    ),\r\n  acceptedTerms: yup.boolean()\r\n    .required('Required')\r\n    .oneOf([true],\r\n      'You must agree before submitting'),\r\n})\r\n\r\nexport const RegisterContainer = ({ onSubmit, loading }) => {\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={onSubmit}\r\n    >\r\n      {({ handleSubmit, isValid, dirty }) =>\r\n        <RegisterForm onSubmit={handleSubmit} isValid={isValid}\r\n          dirty={dirty} loading={loading} />\r\n      }\r\n    </Formik>\r\n  )\r\n}\r\n\r\nconst RegisterForm = ({ onSubmit, isValid, dirty, loading }) => {\r\n  return (\r\n    <FormikForm>\r\n      <div className=\"form-group mb-3\">\r\n        <Tabs defaultActiveKey=\"0\" className=\"mb-3\">\r\n          <Tab eventKey=\"0\" title=\"Register a New Username\" disabled>\r\n            <FloatingLabel label=\"New Username\">\r\n              {loading ? (\r\n                <TextInput name=\"username\" className=\"form-control\" type=\"text\"\r\n                  placeholder=\"New Username\" id=\"usernameFieldRegister\" disabled />\r\n              ) : (\r\n                <TextInput name=\"username\" className=\"form-control\" type=\"text\"\r\n                  placeholder=\"New Username\" id=\"usernameFieldRegister\" />\r\n              )}\r\n            </FloatingLabel>\r\n          </Tab>\r\n        </Tabs>\r\n      </div>\r\n\r\n      <div className=\"form-group mb-3\">\r\n        <Tabs defaultActiveKey=\"0\" className=\"mb-3\">\r\n          <Tab eventKey=\"0\" title=\"Register a New Password\" disabled>\r\n            <FloatingLabel label=\"New Password\">\r\n              {loading ? (\r\n                <TextInput name=\"password\" className=\"form-control\" type=\"password\"\r\n                  placeholder=\"New Password\" id=\"passwordFieldRegister\" disabled />\r\n              ) : (\r\n                <TextInput name=\"password\" className=\"form-control\" type=\"password\"\r\n                  placeholder=\"New Password\" id=\"passwordFieldRegister\" />\r\n              )}\r\n            </FloatingLabel>\r\n          </Tab>\r\n        </Tabs>\r\n      </div>\r\n\r\n      <div className=\"form-group mb-3\">\r\n        <FloatingLabel label=\"Password Confirmation\">\r\n          {loading ? (\r\n            <TextInput name=\"passwordConfirmation\" className=\"form-control\" type=\"password\"\r\n              placeholder=\"Password Confirmation\" id=\"confirmationFieldRegister\" disabled />\r\n          ) : (\r\n            <TextInput name=\"passwordConfirmation\" className=\"form-control\" type=\"password\"\r\n              placeholder=\"Password Confirmation\" id=\"confirmationFieldRegister\" />\r\n          )}\r\n        </FloatingLabel>\r\n      </div>\r\n\r\n      <Checkbox name=\"acceptedTerms\" id=\"termsCheckboxRegister\">\r\n        &nbsp;By clicking on Register, I confirm that I have read and I agree to the\r\n        Terms of Service, which can be seen by clicking the Terms of Service button\r\n        at the bottom of this page.\r\n      </Checkbox>\r\n\r\n      <Container style={styles.button}>\r\n        <Button\r\n          onClick={onSubmit}\r\n          disabled={!dirty || !isValid}\r\n          type=\"submit\"\r\n          size=\"lg\"\r\n          variant=\"outline-dark\"\r\n          id=\"registerButton\">\r\n          {loading ? (\r\n            <>\r\n              Register&nbsp;&nbsp;<Spinner animation=\"border\" size=\"sm\"\r\n                id=\"registerButtonSpinner\" />\r\n            </>\r\n          ) : (\r\n            <>\r\n              Register&nbsp;&nbsp;<FontAwesomeIcon icon={faCloudUploadAlt} size=\"sm\"\r\n                id=\"registerButtonCloudIcon\" />\r\n            </>\r\n          )}\r\n        </Button>\r\n      </Container>\r\n    </FormikForm>\r\n  )\r\n}\r\n\r\nconst Register = () => {\r\n  const [newUsername, setNewUsername] = useState(null)\r\n  const [text, setText] = useState(null)\r\n  const [redirectMessage, setRedirectMessage] = useState(null)\r\n  const [isError, setIsError] = useState(false)\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    clearTimeout(storage.loadTimeout())\r\n  }, [])\r\n\r\n  storage.saveTab('register')\r\n\r\n  const onSubmit = async (values, { setSubmitting, resetForm }) => {\r\n    const username = values.username\r\n    const password = values.password\r\n    setLoading(true)\r\n    setSubmitting(false)\r\n    resetForm(initialValues)\r\n    try {\r\n      const user = await registerService.createNew({\r\n        username, password\r\n      })\r\n      dispatch(createUser(user))\r\n      setNewUsername(username)\r\n      setText('Registering was successful for username:')\r\n      setRedirectMessage('You are being redirected to the Login page ...')\r\n      const timeoutRegister = setTimeout(() => {\r\n        setNewUsername(null)\r\n        setText(null)\r\n        setRedirectMessage(null)\r\n        history.push('/welcome/login')\r\n      }, 6000)\r\n      storage.saveTimeout(timeoutRegister)\r\n    } catch(error) {\r\n      setIsError(true)\r\n      setText('Error: Username is already in use or credentials are not valid')\r\n      const timeoutError = setTimeout(() => {\r\n        setIsError(false)\r\n        setText(null)\r\n        setLoading(false)\r\n        history.push('/')\r\n        history.push('/welcome/register')\r\n      }, 6000)\r\n      storage.saveTimeout(timeoutError)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Welcome loading={loading} />\r\n      {text !== null && <Notification text={text}\r\n        error={isError} name={newUsername} />}\r\n      {redirectMessage !== null && <Notification text={redirectMessage}\r\n        error={isError} name={newUsername} />}\r\n      <RegisterContainer onSubmit={onSubmit} loading={loading} />\r\n      <br />\r\n      <Footer />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Register","import axios from 'axios'\r\nimport storage from '../utils/storage'\r\n\r\nlet baseUrl = '/dashboard/workouts'\r\n\r\nconst getConfig = () => {\r\n  return {\r\n    headers: { Authorization: `bearer ${storage.loadUser().token}` }\r\n  }\r\n}\r\n\r\nif (process.env.NODE_ENV === 'test') {\r\n  baseUrl = 'http://localhost:3001/dashboard/workouts'\r\n}\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  baseUrl = '/dashboard/workouts'\r\n}\r\n\r\nconst createNewWorkout = async (newWorkout) => {\r\n  const response = await axios.post(`${baseUrl}/newWorkout`, newWorkout, getConfig())\r\n  return response.data\r\n}\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.post(`${baseUrl}/workouts`, {}, getConfig())\r\n  return response.data\r\n}\r\n\r\nconst updateWorkout = async (workout) => {\r\n  const response = await axios.put(`${baseUrl}/updateWorkout`, workout, getConfig())\r\n  return response.data\r\n}\r\n\r\nexport default { createNewWorkout, getAll, updateWorkout }","import workoutService from '../services/workoutService'\r\n\r\nconst workoutReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n  case 'CREATE_WORKOUT':\r\n    return action.data\r\n  case 'DELETE_WORKOUT':\r\n    return 'Your workout has been removed.'\r\n  case 'GET_WORKOUTS':\r\n    return action.data\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const createWorkout = (newWorkout) => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: 'CREATE_WORKOUT',\r\n      data: {\r\n        workout: newWorkout,\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteWorkout = () => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: 'DELETE_WORKOUT',\r\n    })\r\n  }\r\n}\r\n\r\nexport const getWorkouts = () => {\r\n  return async dispatch => {\r\n    const data = await workoutService.getAll()\r\n    dispatch({\r\n      type: 'GET_WORKOUTS',\r\n      data: {\r\n        workouts: data,\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default workoutReducer","import React, {\r\n  useEffect, useState,\r\n} from 'react'\r\nimport {\r\n  useDispatch, useSelector\r\n} from 'react-redux'\r\nimport { getTooltips } from '../reducers/profileReducer'\r\nimport { logout } from '../reducers/userReducer'\r\nimport { getWorkouts } from '../reducers/workoutReducer'\r\nimport storage from '../utils/storage'\r\n\r\nimport {\r\n  Container, Form, Nav, Navbar, NavDropdown, OverlayTrigger,\r\n  Tab, Tabs,\r\n} from 'react-bootstrap'\r\nimport {\r\n  CartesianGrid, Line, LineChart, ResponsiveContainer,\r\n  Tooltip as StatisticsTooltip, XAxis, YAxis,\r\n} from 'recharts'\r\n\r\nimport { statisticsNotesTooltip } from './Tooltips'\r\n\r\nimport theme from '../theme'\r\nimport Dashboard from './Dashboard'\r\nimport Footer from './Footer'\r\n\r\nconst styles = {\r\n  button: {\r\n    display: theme.displays.flex,\r\n    justifyContent: theme.justifications.spaceBetween,\r\n    paddingTop: theme.paddings.small,\r\n    paddingRight: theme.paddings.zero,\r\n    paddingBottom: theme.paddings.small,\r\n    paddingLeft: theme.paddings.zero,\r\n  },\r\n  subtitle: {\r\n    color: theme.colors.darkPink,\r\n    fontFamily: theme.fontFamilies.quantico,\r\n    fontSize: theme.fontSizes.subtitle,\r\n  },\r\n  textarea: {\r\n    height: theme.heights.medium,\r\n  },\r\n}\r\n\r\nconst StatisticsFields = ({ tooltips, statistics }) => {\r\n  return (\r\n    <div className=\"form-group mb-4\">\r\n      <ResponsiveContainer width=\"100%\" aspect={2}>\r\n        <LineChart data={statistics.chart}>\r\n          <CartesianGrid />\r\n          <XAxis label=\"date\" tick={false} dataKey=\"date\"\r\n            interval={'preserveStartEnd'} />\r\n          <Line dataKey=\"result\" stroke=\"blue\" activeDot={{ r: 8 }} />\r\n          <YAxis />\r\n          <StatisticsTooltip />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n      <Form.Group className=\"mb-3\" controlId=\"formStatisticsTarget\">\r\n        <Tabs defaultActiveKey=\"categoryTitle\" className=\"mb-3\">\r\n          <Tab eventKey=\"categoryTitle\" title=\"Category - Title\" disabled>\r\n            <Form.Control type=\"text\" placeholder=\"\" value={statistics.categoryTitle} disabled />\r\n          </Tab>\r\n        </Tabs>\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\" controlId=\"formStatisticsTarget\">\r\n        <Tabs defaultActiveKey=\"target\" className=\"mb-3\">\r\n          <Tab eventKey=\"target\" title=\"Target\" disabled>\r\n            <Form.Control type=\"text\" placeholder=\"\" value={statistics.target} disabled />\r\n          </Tab>\r\n        </Tabs>\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\" controlId=\"formStatisticsMin\">\r\n        <Tabs defaultActiveKey=\"min\" className=\"mb-3\">\r\n          <Tab eventKey=\"min\" title=\"Min\" disabled>\r\n            <Form.Control type=\"text\" placeholder=\"\" value={statistics.min} disabled />\r\n          </Tab>\r\n        </Tabs>\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\" controlId=\"formStatisticsMax\">\r\n        <Tabs defaultActiveKey=\"max\" className=\"mb-3\">\r\n          <Tab eventKey=\"max\" title=\"Max\" disabled>\r\n            <Form.Control type=\"text\" placeholder=\"\" value={statistics.max} disabled />\r\n          </Tab>\r\n        </Tabs>\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\" controlId=\"formStatisticsAvg\">\r\n        <Tabs defaultActiveKey=\"avg\" className=\"mb-3\">\r\n          <Tab eventKey=\"avg\" title=\"Avg\" disabled>\r\n            <Form.Control type=\"text\" placeholder=\"\" value={statistics.avg} disabled />\r\n          </Tab>\r\n        </Tabs>\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\" controlId=\"formStatisticsLast\">\r\n        <Tabs defaultActiveKey=\"last\" className=\"mb-3\">\r\n          <Tab eventKey=\"last\" title=\"Last\" disabled>\r\n            <Form.Control type=\"text\" placeholder=\"\"\r\n              value={statistics.result[statistics.result.length - 1].result} disabled />\r\n          </Tab>\r\n        </Tabs>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"formStatistics\">\r\n        <Tabs defaultActiveKey=\"notes\" className=\"mb-3\">\r\n          <Tab eventKey=\"notes\" title=\"Notes\" disabled>\r\n            {tooltips ? (\r\n              <OverlayTrigger\r\n                placement=\"top\"\r\n                delay={{ show: 1000, hide: 0 }}\r\n                overlay={statisticsNotesTooltip}\r\n              >\r\n                <Form.Control as=\"textarea\" placeholder=\"\" value={statistics.notes}\r\n                  style={styles.textarea} disabled />\r\n              </OverlayTrigger>\r\n            ) : (\r\n              <Form.Control as=\"textarea\" placeholder=\"\" value={statistics.notes}\r\n                style={styles.textarea} disabled />\r\n            )}\r\n          </Tab>\r\n        </Tabs>\r\n      </Form.Group>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst createWorkoutsList = (workouts) => {\r\n  const workoutsList = []\r\n  workouts.map((workout, index) => {\r\n    workoutsList.push(\r\n      <NavDropdown.Item\r\n        key={index}\r\n        eventKey={workout.categoryTitle}\r\n        id={workout.categoryTitle}\r\n      >\r\n        {workout.categoryTitle}\r\n      </NavDropdown.Item>)\r\n  })\r\n\r\n  return workoutsList\r\n}\r\n\r\nconst createStatisticsFields = (categoryTitle, workouts) => {\r\n  let workout = null\r\n\r\n  workouts && workouts.map(w => {\r\n    w.categoryTitle === categoryTitle ? workout = w : null\r\n  })\r\n\r\n  // create chart\r\n  workout.chart = []\r\n  workout.result.map(r => {\r\n    workout.chart.push(r)\r\n  })\r\n\r\n  // create an array for mininum value, maximum value and average value\r\n  workout.resultItems = []\r\n  workout.result.map(r => {\r\n    workout.resultItems.push(r.result)\r\n  })\r\n\r\n  // don't include the first item (0) from workout.resultItems, if user has input values there\r\n  if (workout.resultItems.length > 1) {\r\n    workout.min = Math.min(...workout.resultItems.slice(1))\r\n    workout.avg = workout.resultItems.reduce((r1, r2) => r1 + r2) / (workout.resultItems.length - 1)\r\n  } else {\r\n    workout.min = Math.min(...workout.resultItems)\r\n    workout.avg = workout.resultItems.reduce((r1, r2) => r1 + r2) / workout.resultItems.length\r\n  }\r\n  workout.max = Math.max(...workout.resultItems)\r\n\r\n  return workout\r\n}\r\n\r\nconst Statistics = () => {\r\n  const [selectedStatistics, setSelectedStatistics] = useState(storage.loadStatistics())\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    clearTimeout(storage.loadTimeout())\r\n    if (storage.loadUser() === null) {\r\n      dispatch(logout())\r\n    } else {\r\n      dispatch(getTooltips())\r\n      dispatch(getWorkouts())\r\n    }\r\n  }, [])\r\n\r\n  storage.saveTab('statistics')\r\n\r\n  const workouts = useSelector(state => state.workout.workouts)\r\n  const tooltips = useSelector(state => state.profile.tooltips)\r\n\r\n  useEffect(() => {\r\n    if (workouts !== undefined && selectedStatistics !== null) {\r\n      const statistics = createStatisticsFields(selectedStatistics.categoryTitle, workouts)\r\n      storage.saveStatistics(statistics)\r\n      setSelectedStatistics(statistics)\r\n    }\r\n  }, [])\r\n\r\n  const workoutList = workouts\r\n    && createWorkoutsList(\r\n      workouts.sort((w1, w2) =>\r\n        (w1.categoryTitle > w2.categoryTitle) - (w1.categoryTitle < w2.categoryTitle))\r\n    )\r\n\r\n  return (\r\n    <Container>\r\n      <Dashboard />\r\n      <Navbar variant=\"light\" bg=\"light\" expand=\"lg\">\r\n        <Container>\r\n          <Navbar.Brand href=\"#\">Select workout statistics: </Navbar.Brand>\r\n          <Navbar.Toggle />\r\n          <Navbar.Collapse>\r\n            <Nav\r\n              onSelect={(categoryTitle) => {\r\n                if (storage.loadUser() === null) {\r\n                  dispatch(logout())\r\n                } else {\r\n                  const statistics = createStatisticsFields(categoryTitle, workouts)\r\n                  storage.saveStatistics(statistics)\r\n                  setSelectedStatistics(statistics)\r\n                  dispatch(getWorkouts())\r\n                }\r\n              }}\r\n            >\r\n              <NavDropdown\r\n                title=\"Statistics\"\r\n                menuVariant=\"light\"\r\n                id=\"statisticsSelectStatisticsDropdown\"\r\n              >\r\n                {workoutList}\r\n              </NavDropdown>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      <h2 style={styles.subtitle}>Statistics</h2>\r\n      <Tabs defaultActiveKey=\"selectedStatistics\" className=\"mb-4\">\r\n        <Tab eventKey=\"selectedStatistics\" title=\"Selected Statistics\" disabled />\r\n      </Tabs>\r\n      {selectedStatistics !== null ? (\r\n        <StatisticsFields tooltips={tooltips} statistics={selectedStatistics} />\r\n      ) : (\r\n        null\r\n      )}\r\n      <br /><br />\r\n      <br /><br />\r\n      <Footer />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Statistics","import React, {\r\n  useEffect, useState,\r\n} from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { newMetronomeColor } from '../../../reducers/timersReducer'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n  Form, OverlayTrigger,\r\n} from 'react-bootstrap'\r\n\r\nimport { faLightbulb } from '@fortawesome/free-regular-svg-icons'\r\n\r\nimport { metronomeLightTooltip } from '../../Tooltips'\r\n\r\nimport theme from '../../../theme'\r\n\r\nconst styles = {\r\n  colorSelect: {\r\n    display: theme.displays.flex,\r\n    justifyContent: theme.justifications.spaceBetween,\r\n    paddingTop: theme.paddings.small,\r\n    paddingRight: theme.paddings.small,\r\n    paddingBottom: theme.paddings.medium,\r\n  },\r\n  timerInput: {\r\n    display: theme.displays.flex,\r\n    fontFamily: theme.fontFamilies.quantico,\r\n    fontSize: theme.fontSizes.subheading,\r\n  },\r\n}\r\n\r\nconst Color = ({ tooltips }) => {\r\n  const [metronomeColor, setMetronomeColor] = useState('#ff0000')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(newMetronomeColor(metronomeColor))\r\n  }, [metronomeColor])\r\n\r\n  const handleColor = (event) => {\r\n    event.preventDefault()\r\n    const newColor = (event.target.value)\r\n    setMetronomeColor(newColor)\r\n  }\r\n\r\n  return (\r\n    <div style={styles.timerInput}>\r\n      {tooltips ? (\r\n        <OverlayTrigger\r\n          placement=\"top\"\r\n          delay={{ show: 1000, hide: 0 }}\r\n          overlay={metronomeLightTooltip}\r\n        >\r\n          <Form>\r\n            <FontAwesomeIcon icon={faLightbulb} /> Color\r\n            <div style={styles.colorSelect}>\r\n              <Form.Control\r\n                onChange={handleColor}\r\n                type=\"color\"\r\n                defaultValue=\"#ff0000\"\r\n              />\r\n            </div>\r\n          </Form>\r\n        </OverlayTrigger>\r\n      ) : (\r\n        <Form>\r\n          <FontAwesomeIcon icon={faLightbulb} /> Color\r\n          <div style={styles.colorSelect}>\r\n            <Form.Control\r\n              onChange={handleColor}\r\n              type=\"color\"\r\n              defaultValue=\"#ff0000\"\r\n            />\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Color","export default __webpack_public_path__ + \"static/media/beat.2c6bba94.mp3\";","import React, {\r\n  useEffect, useState,\r\n} from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport {\r\n  Button, Container, Form, Tab, Tabs,\r\n} from 'react-bootstrap'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCircle } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport Buttons from './Settings/Buttons'\r\nimport Color from './Settings/Color'\r\n\r\nimport theme from '../../theme'\r\n\r\nimport beatAudio from '../../sounds/beat.mp3'\r\n\r\nconst styles = {\r\n  advance: {\r\n    display: theme.displays.flex,\r\n    justifyContent: theme.justifications.center,\r\n  },\r\n  bpm: {\r\n    color: theme.colors.darkPink,\r\n    display: theme.displays.flex,\r\n    fontFamily: theme.fontFamilies.quantico,\r\n    fontSize: theme.fontSizes.subtitle,\r\n    justifyContent: theme.justifications.center,\r\n  },\r\n  timerDigit: {\r\n    display: theme.displays.flex,\r\n    fontFamily: theme.fontFamilies.langar,\r\n    fontSize: theme.fontSizes.title,\r\n    justifyContent: theme.justifications.center,\r\n  },\r\n}\r\n\r\nconst Metronome = ({ tooltips }) => {\r\n  const [isActive, setIsActive] = useState(false)\r\n  const [isPaused, setIsPaused] = useState(false)\r\n  const [showBpm, setShowBpm] = useState(60)\r\n  const [bpm, setBpm] = useState(60)\r\n  const [color, setColor] = useState(null)\r\n  const [light, setLight] = useState(false)\r\n\r\n  const beat = new Audio(beatAudio)\r\n\r\n  useEffect(() => {\r\n    let countBeat = null\r\n    const millisecondsToNextBeat = Math.floor((60 / bpm) * 1000)\r\n\r\n    if (isActive === true && isPaused === false) {\r\n      countBeat = setInterval(() => {\r\n        beat.play()\r\n        setLight(true)\r\n      }, millisecondsToNextBeat)\r\n    } else {\r\n      clearInterval(countBeat)\r\n    }\r\n\r\n    return () => {\r\n      clearInterval(countBeat)\r\n    }\r\n\r\n  }, [isActive, isPaused])\r\n\r\n  const newColor = useSelector(state => state.timers.metronomeColor)\r\n\r\n  useEffect(() => {\r\n    handleReset()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setLight(false)\r\n    }, 40)\r\n  }, [light])\r\n\r\n  useEffect(() => {\r\n    if (newColor !== undefined) {\r\n      setColor(newColor)\r\n    }\r\n  }, [newColor])\r\n\r\n  const handleStart = () => {\r\n    setIsActive(true)\r\n    setIsPaused(false)\r\n  }\r\n\r\n  const handlePause = () => {\r\n    setIsPaused(true)\r\n  }\r\n\r\n  const handleReset = () => {\r\n    setIsActive(false)\r\n    setIsPaused(true)\r\n    setBpm(60)\r\n    setShowBpm(60)\r\n  }\r\n\r\n  const handleShowBpm = (event) => {\r\n    const newBpm = (event.target.value)\r\n    setShowBpm(newBpm)\r\n  }\r\n\r\n  const handleBpm = (event) => {\r\n    event.preventDefault()\r\n    setIsActive(false)\r\n    setIsPaused(true)\r\n    setBpm(showBpm)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form.Group controlId=\"formTimersMetronome\">\r\n        <Tabs defaultActiveKey=\"metronome\" className=\"mb-3\">\r\n          <Tab eventKey=\"metronome\" title=\"Metronome\" disabled>\r\n            <Container>\r\n              <br /><br />\r\n              <Container style={styles.timerDigit}>\r\n                {light ? (\r\n                  <FontAwesomeIcon style={{ color: color }} icon={faCircle} />\r\n                ) : (\r\n                  <FontAwesomeIcon style={{ color: 'white' }} icon={faCircle} />\r\n                )}\r\n              </Container>\r\n              <br /><br />\r\n              <Form onSubmit={handleBpm}>\r\n                <Form.Range\r\n                  onChange={handleShowBpm}\r\n                  value={showBpm}\r\n                  type=\"range\"\r\n                  min=\"10\"\r\n                  max=\"300\"\r\n                />\r\n                <div style={styles.bpm}>\r\n                  {showBpm}\r\n                </div>\r\n                <div style={styles.advance}>\r\n                  <Button size=\"lg\" variant=\"outline-success\" type=\"submit\" className=\"mb-3\">\r\n                    Set BPM\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n              <Buttons\r\n                isPaused={isPaused}\r\n                handleStart={handleStart}\r\n                handlePause={handlePause}\r\n                handleReset={handleReset}\r\n                tooltips={tooltips}\r\n              />\r\n              <Color tooltips={tooltips} />\r\n            </Container>\r\n          </Tab>\r\n        </Tabs>\r\n      </Form.Group>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Metronome","import React, { useEffect } from 'react'\r\nimport {\r\n  useDispatch, useSelector\r\n} from 'react-redux'\r\nimport { getTooltips } from '../reducers/profileReducer'\r\nimport { logout } from '../reducers/userReducer'\r\nimport storage from '../utils/storage'\r\n\r\nimport { Container } from 'react-bootstrap'\r\n\r\nimport CountdownTimer from './Timers/CountdownTimer'\r\nimport Metronome from './Timers/Metronome'\r\nimport Stopwatch from './Timers/Stopwatch'\r\n\r\nimport theme from '../theme'\r\nimport Dashboard from './Dashboard'\r\nimport Footer from './Footer'\r\n\r\nconst styles = {\r\n  subtitle: {\r\n    color: theme.colors.darkPink,\r\n    fontFamily: theme.fontFamilies.quantico,\r\n    fontSize: theme.fontSizes.subtitle,\r\n  },\r\n}\r\n\r\nconst Timers = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (storage.loadUser() === null) {\r\n      dispatch(logout())\r\n    } else {\r\n      clearTimeout(storage.loadTimeout())\r\n      dispatch(getTooltips())\r\n    }\r\n  }, [])\r\n\r\n  storage.saveTab('timers')\r\n\r\n  const tooltips = useSelector(state => state.profile.tooltips)\r\n\r\n  return (\r\n    <Container>\r\n      <Dashboard />\r\n      <h2 style={styles.subtitle}>Timers</h2>\r\n      <Stopwatch tooltips={tooltips} />\r\n      <CountdownTimer tooltips={tooltips} />\r\n      <Metronome tooltips={tooltips} />\r\n      <br /><br />\r\n      <br /><br />\r\n      <Footer />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Timers","import React, {\r\n  useEffect, useState,\r\n} from 'react'\r\nimport {\r\n  useDispatch, useSelector\r\n} from 'react-redux'\r\nimport {\r\n  Formik, Form as FormikForm,\r\n} from 'formik'\r\nimport * as yup from 'yup'\r\nimport { getTooltips } from '../reducers/profileReducer'\r\nimport { logout } from '../reducers/userReducer'\r\nimport {\r\n  createWorkout, deleteWorkout, getWorkouts,\r\n} from '../reducers/workoutReducer'\r\nimport deleteService from '../services/deleteService'\r\nimport workoutService from '../services/workoutService'\r\nimport storage from '../utils/storage'\r\n\r\nimport {\r\n  Button, Container, FloatingLabel, Form, Nav, Navbar, NavDropdown, OverlayTrigger,\r\n  Spinner, Tab, Tabs,\r\n} from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n  faSave, faTrashAlt,\r\n} from '@fortawesome/free-regular-svg-icons'\r\n\r\nimport {\r\n  TextArea, TextInput,\r\n} from './FormField'\r\n\r\nimport {\r\n  selectedWorkoutPreviousTargetTooltip, selectedWorkoutCategoryTitleTooltip,\r\n  selectedWorkoutPreviousResultTooltip, selectedWorkoutPreviousNotesTooltip,\r\n  selectedWorkoutTargetTooltip, selectedWorkoutResultTooltip,\r\n  selectedWorkoutNotesTooltip, newWorkoutCategoryTitleTooltip,\r\n  newWorkoutTargetTooltip,\r\n} from './Tooltips'\r\n\r\nimport theme from '../theme'\r\nimport Dashboard from './Dashboard'\r\nimport Footer from './Footer'\r\nimport Notification from './Notification'\r\n\r\nconst styles = {\r\n  button: {\r\n    display: theme.displays.flex,\r\n    justifyContent: theme.justifications.spaceBetween,\r\n    paddingTop: theme.paddings.small,\r\n    paddingRight: theme.paddings.zero,\r\n    paddingBottom: theme.paddings.small,\r\n    paddingLeft: theme.paddings.zero,\r\n  },\r\n  subtitle: {\r\n    color: theme.colors.darkPink,\r\n    fontFamily: theme.fontFamilies.quantico,\r\n    fontSize: theme.fontSizes.subtitle,\r\n  },\r\n  textarea: {\r\n    height: theme.heights.medium,\r\n  },\r\n}\r\n\r\nconst initialWorkoutValues = {\r\n  categoryTitle: '',\r\n  target: '',\r\n  result: '',\r\n  notes: '',\r\n}\r\n\r\nconst validationWorkoutSchema = yup.object().shape({\r\n  categoryTitle: yup\r\n    .string()\r\n    .max(55, 'Category and title must be at most 55 characters long'),\r\n  target: yup\r\n    .string()\r\n    .min(1, 'Target must be at least 1 character long')\r\n    .max(40, 'Target must be at most 40 characters long'),\r\n  result: yup\r\n    .string()\r\n    .min(1, 'Result must be at least 1 character long')\r\n    .max(40, 'Result must be at most 40 characters long'),\r\n  notes: yup\r\n    .string()\r\n    .max(5000, 'Notes must be at most 5000 characters long'),\r\n})\r\n\r\nexport const UpdateWorkoutContainer = ({ onSubmit, loading, tooltips, workout }) => {\r\n  return (\r\n    <Formik\r\n      initialValues={initialWorkoutValues}\r\n      validationSchema={validationWorkoutSchema}\r\n      onSubmit={onSubmit}\r\n    >\r\n      {({ handleSubmit, isValid, dirty }) =>\r\n        <UpdateWorkoutForm onSubmit={handleSubmit} isValid={isValid} dirty={dirty}\r\n          loading={loading} tooltips={tooltips} workout={workout} />\r\n      }\r\n    </Formik>\r\n  )\r\n}\r\n\r\nconst UpdateWorkoutForm = ({ onSubmit, isValid, dirty, loading, workout, tooltips }) => {\r\n  return (\r\n    <FormikForm>\r\n      <div className=\"form-group mb-3\">\r\n        {tooltips ? (\r\n          <OverlayTrigger\r\n            placement=\"top\"\r\n            delay={{ show: 1000, hide: 0 }}\r\n            overlay={selectedWorkoutCategoryTitleTooltip}\r\n          >\r\n            <FloatingLabel label=\"Selected Workout Category - Title\">\r\n              <Form.Control type=\"text\" placeholder=\"Category - Title\" id=\"selectedWorkoutCategoryTitle\"\r\n                value={workout.categoryTitle} disabled />\r\n            </FloatingLabel>\r\n          </OverlayTrigger>\r\n        ) : (\r\n          <FloatingLabel label=\"Selected Workout Category - Title\">\r\n            <Form.Control type=\"text\" placeholder=\"Category - Title\" id=\"selectedWorkoutCategoryTitle\"\r\n              value={workout.categoryTitle} disabled />\r\n          </FloatingLabel>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"form-group mb-3\">\r\n        {tooltips ? (\r\n          <OverlayTrigger\r\n            placement=\"top\"\r\n            delay={{ show: 1000, hide: 0 }}\r\n            overlay={selectedWorkoutPreviousTargetTooltip}\r\n          >\r\n            <FloatingLabel label=\"Previous Target Result\">\r\n              <Form.Control type=\"text\" placeholder=\"Previous Target Result\"\r\n                id=\"selectedWorkoutPreviousTarget\" value={workout.target} disabled />\r\n            </FloatingLabel>\r\n          </OverlayTrigger>\r\n        ) : (\r\n          <FloatingLabel label=\"Previous Target Result\">\r\n            <Form.Control type=\"text\" placeholder=\"Previous Target Result\"\r\n              id=\"selectedWorkoutPreviousTarget\" value={workout.target} disabled />\r\n          </FloatingLabel>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"form-group mb-3\">\r\n        {tooltips ? (\r\n          <OverlayTrigger\r\n            placement=\"top\"\r\n            delay={{ show: 1000, hide: 0 }}\r\n            overlay={selectedWorkoutPreviousResultTooltip}\r\n          >\r\n            <FloatingLabel label=\"Previous Result\">\r\n              <Form.Control type=\"text\" placeholder=\"Previous Result\" id=\"selectedWorkoutPreviousResult\"\r\n                value={workout.result[workout.result.length - 1].result} disabled />\r\n            </FloatingLabel>\r\n          </OverlayTrigger>\r\n        ) : (\r\n          <FloatingLabel label=\"Previous Result\">\r\n            <Form.Control type=\"text\" placeholder=\"Previous Result\" id=\"selectedWorkoutPreviousResult\"\r\n              value={workout.result[workout.result.length - 1].result} disabled />\r\n          </FloatingLabel>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"form-group mb-3\">\r\n        {tooltips ? (\r\n          <OverlayTrigger\r\n            placement=\"top\"\r\n            delay={{ show: 1000, hide: 0 }}\r\n            overlay={selectedWorkoutPreviousNotesTooltip}\r\n          >\r\n            <FloatingLabel label=\"Previous Notes\">\r\n              <Form.Control as=\"textarea\" placeholder=\"Previous Notes\"\r\n                rows=\"10\" id=\"selectedWorkoutPreviousNotes\"\r\n                value={workout.notes} style={styles.textarea} disabled />\r\n            </FloatingLabel>\r\n          </OverlayTrigger>\r\n        ) : (\r\n          <FloatingLabel label=\"Previous Notes\">\r\n            <Form.Control as=\"textarea\" placeholder=\"Previous Notes\"\r\n              rows=\"10\" id=\"selectedWorkoutPreviousNotes\"\r\n              value={workout.notes} style={styles.textarea} disabled />\r\n          </FloatingLabel>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"form-group mb-3\">\r\n        {tooltips ? (\r\n          <OverlayTrigger\r\n            placement=\"top\"\r\n            delay={{ show: 1000, hide: 0 }}\r\n            overlay={selectedWorkoutTargetTooltip}\r\n          >\r\n            <FloatingLabel label=\"New Target Result\">\r\n              {loading ? (\r\n                <TextInput name=\"target\" className=\"form-control\" type=\"text\"\r\n                  placeholder=\"Target Result\" id=\"selectedWorkoutTarget\" disabled />\r\n              ) : (\r\n                <TextInput name=\"target\" className=\"form-control\" type=\"text\"\r\n                  placeholder=\"Target Result\" id=\"selectedWorkoutTarget\" />\r\n              )}\r\n            </FloatingLabel>\r\n          </OverlayTrigger>\r\n        ) : (\r\n          <FloatingLabel label=\"New Target Result\">\r\n            {loading ? (\r\n              <TextInput name=\"target\" className=\"form-control\" type=\"text\"\r\n                placeholder=\"Target Result\" id=\"selectedWorkoutTarget\" disabled />\r\n            ) : (\r\n              <TextInput name=\"target\" className=\"form-control\" type=\"text\"\r\n                placeholder=\"Target Result\" id=\"selectedWorkoutTarget\" />\r\n            )}\r\n          </FloatingLabel>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"form-group mb-3\">\r\n        {tooltips ? (\r\n          <OverlayTrigger\r\n            placement=\"top\"\r\n            delay={{ show: 1000, hide: 0 }}\r\n            overlay={selectedWorkoutResultTooltip}\r\n          >\r\n            <FloatingLabel label=\"New Result\">\r\n              {loading ? (\r\n                <TextInput name=\"result\" className=\"form-control\" type=\"text\"\r\n                  placeholder=\"Result\" id=\"selectedWorkoutResult\" disabled />\r\n              ) : (\r\n                <TextInput name=\"result\" className=\"form-control\" type=\"text\"\r\n                  placeholder=\"Result\" id=\"selectedWorkoutResult\" />\r\n              )}\r\n            </FloatingLabel>\r\n          </OverlayTrigger>\r\n        ) : (\r\n          <FloatingLabel label=\"New Result\">\r\n            {loading ? (\r\n              <TextInput name=\"result\" className=\"form-control\" type=\"text\"\r\n                placeholder=\"Result\" id=\"selectedWorkoutResult\" disabled />\r\n            ) : (\r\n              <TextInput name=\"result\" className=\"form-control\" type=\"text\"\r\n                placeholder=\"Result\" id=\"selectedWorkoutResult\" />\r\n            )}\r\n          </FloatingLabel>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"form-group mb-3\">\r\n        {tooltips ? (\r\n          <OverlayTrigger\r\n            placement=\"top\"\r\n            delay={{ show: 1000, hide: 0 }}\r\n            overlay={selectedWorkoutNotesTooltip}\r\n          >\r\n            <FloatingLabel label=\". .../\">\r\n              {loading ? (\r\n                <TextArea name=\"notes\" className=\"form-control\" as=\"textarea\"\r\n                  placeholder=\"\" id=\"selectedWorkoutNotes\" disabled />\r\n              ) : (\r\n                <TextArea name=\"notes\" className=\"form-control\" as=\"textarea\"\r\n                  placeholder=\"\" id=\"selectedWorkoutNotes\" />\r\n              )}\r\n            </FloatingLabel>\r\n          </OverlayTrigger>\r\n        ) : (\r\n          <FloatingLabel label=\". .../\">\r\n            {loading ? (\r\n              <TextArea name=\"notes\" className=\"form-control\" as=\"textarea\"\r\n                placeholder=\"\" id=\"selectedWorkoutNotes\" disabled />\r\n            ) : (\r\n              <TextArea name=\"notes\" className=\"form-control\" as=\"textarea\"\r\n                placeholder=\"\" id=\"selectedWorkoutNotes\" />\r\n            )}\r\n          </FloatingLabel>\r\n        )}\r\n      </div>\r\n\r\n      <Container style={styles.button}>\r\n        <Button\r\n          onClick={onSubmit}\r\n          disabled={!dirty || !isValid}\r\n          type=\"submit\"\r\n          size=\"lg\"\r\n          variant=\"outline-primary\"\r\n          id=\"selectedWorkoutSaveButton\">\r\n          {loading ? (\r\n            <>\r\n              Save&nbsp;&nbsp;<Spinner animation=\"border\" size=\"sm\"\r\n                id=\"selectedWorkoutSaveButtonSpinner\" />\r\n            </>\r\n          ) : (\r\n            <>\r\n              Save&nbsp;&nbsp;<FontAwesomeIcon icon={faSave} size=\"sm\"\r\n                id=\"selectedWorkoutSaveButtonSaveIcon\" />\r\n            </>\r\n          )}\r\n        </Button>\r\n      </Container>\r\n    </FormikForm>\r\n  )\r\n}\r\n\r\nexport const DeleteWorkoutContainer = ({ onSubmit, loading, workout }) => {\r\n  return (\r\n    <Formik\r\n      initialValues={initialWorkoutValues}\r\n      onSubmit={onSubmit}\r\n    >\r\n      {({ handleSubmit }) =>\r\n        <DeleteWorkoutForm onSubmit={handleSubmit} loading={loading} workout={workout} />\r\n      }\r\n    </Formik>\r\n  )\r\n}\r\n\r\nconst DeleteWorkoutForm = ({ onSubmit, loading, workout }) => {\r\n  return (\r\n    <FormikForm>\r\n      <div className=\"form-group mb-3\">\r\n        <Container style={styles.button}>\r\n          <Button\r\n            onClick={onSubmit}\r\n            disabled={loading || !workout}\r\n            type=\"submit\"\r\n            size=\"lg\"\r\n            variant=\"outline-danger\"\r\n            id=\"selectedWorkoutDeleteButton\">\r\n            {loading ? (\r\n              <>\r\n                Delete&nbsp;&nbsp;<Spinner animation=\"border\" size=\"sm\"\r\n                  id=\"selectedWorkoutDeleteButtonSpinner\" />\r\n              </>\r\n            ) : (\r\n              <>\r\n                Delete&nbsp;&nbsp;<FontAwesomeIcon icon={faTrashAlt} size=\"sm\"\r\n                  id=\"selectedWorkoutDeleteButtonTrashIcon\" />\r\n              </>\r\n            )}\r\n          </Button>\r\n        </Container>\r\n      </div>\r\n    </FormikForm>\r\n  )\r\n}\r\n\r\nexport const NewWorkoutContainer = ({ onSubmit, loading, tooltips }) => {\r\n  return (\r\n    <Formik\r\n      initialValues={initialWorkoutValues}\r\n      validationSchema={validationWorkoutSchema}\r\n      onSubmit={onSubmit}\r\n    >\r\n      {({ handleSubmit, isValid, dirty }) =>\r\n        <NewWorkoutForm onSubmit={handleSubmit} isValid={isValid} dirty={dirty}\r\n          loading={loading} tooltips={tooltips} />\r\n      }\r\n    </Formik>\r\n  )\r\n}\r\n\r\nconst NewWorkoutForm = ({ onSubmit, isValid, dirty, loading, tooltips }) => {\r\n  return (\r\n    <FormikForm>\r\n      <div className=\"form-group mb-3\">\r\n        <Tabs defaultActiveKey=\"newWorkoutCategoryTitle\" className=\"mb-3\">\r\n          <Tab eventKey=\"newWorkoutCategoryTitle\" title=\"Create a New Workout Category and Title\" disabled>\r\n            {tooltips ? (\r\n              <OverlayTrigger\r\n                placement=\"top\"\r\n                delay={{ show: 1000, hide: 0 }}\r\n                overlay={newWorkoutCategoryTitleTooltip}\r\n              >\r\n                <FloatingLabel label=\"Category - Title\">\r\n                  {loading ? (\r\n                    <TextInput name=\"categoryTitle\" className=\"form-control\" type=\"text\"\r\n                      placeholder=\"Category - Title\" id=\"newWorkoutCategoryTitle\" disabled />\r\n                  ) : (\r\n                    <TextInput name=\"categoryTitle\" className=\"form-control\" type=\"text\"\r\n                      placeholder=\"Category - Title\" id=\"newWorkoutCategoryTitle\" />\r\n                  )}\r\n                </FloatingLabel>\r\n              </OverlayTrigger>\r\n            ) : (\r\n              <FloatingLabel label=\"Category - Title\">\r\n                {loading ? (\r\n                  <TextInput name=\"categoryTitle\" className=\"form-control\" type=\"text\"\r\n                    placeholder=\"Category - Title\" id=\"newWorkoutCategoryTitle\" disabled />\r\n                ) : (\r\n                  <TextInput name=\"categoryTitle\" className=\"form-control\" type=\"text\"\r\n                    placeholder=\"Category - Title\" id=\"newWorkoutCategoryTitle\" />\r\n                )}\r\n              </FloatingLabel>\r\n            )}\r\n          </Tab>\r\n        </Tabs>\r\n      </div>\r\n\r\n      <div className=\"form-group mb-3\">\r\n        <Tabs defaultActiveKey=\"newWorkoutTarget\" className=\"mb-3\">\r\n          <Tab eventKey=\"newWorkoutTarget\" title=\"Create a New Workout Target Result\" disabled>\r\n            {tooltips ? (\r\n              <OverlayTrigger\r\n                placement=\"top\"\r\n                delay={{ show: 1000, hide: 0 }}\r\n                overlay={newWorkoutTargetTooltip}\r\n              >\r\n                <FloatingLabel label=\"Target Result\">\r\n                  {loading ? (\r\n                    <TextInput name=\"target\" className=\"form-control\" type=\"text\"\r\n                      placeholder=\"Target Result\" id=\"newWorkoutTarget\" disabled />\r\n                  ) : (\r\n                    <TextInput name=\"target\" className=\"form-control\" type=\"text\"\r\n                      placeholder=\"Target Result\" id=\"newWorkoutTarget\" />\r\n                  )}\r\n                </FloatingLabel>\r\n              </OverlayTrigger>\r\n            ) : (\r\n              <FloatingLabel label=\"Target Result\">\r\n                {loading ? (\r\n                  <TextInput name=\"target\" className=\"form-control\" type=\"text\"\r\n                    placeholder=\"Target Result\" id=\"newWorkoutTarget\" disabled />\r\n                ) : (\r\n                  <TextInput name=\"target\" className=\"form-control\" type=\"text\"\r\n                    placeholder=\"Target Result\" id=\"newWorkoutTarget\" />\r\n                )}\r\n              </FloatingLabel>\r\n            )}\r\n          </Tab>\r\n        </Tabs>\r\n      </div>\r\n\r\n      <Container style={styles.button}>\r\n        <Button\r\n          onClick={onSubmit}\r\n          disabled={!dirty || !isValid}\r\n          type=\"submit\"\r\n          size=\"lg\"\r\n          variant=\"outline-primary\"\r\n          id=\"newWorkoutSaveButton\">\r\n          {loading ? (\r\n            <>\r\n              Save&nbsp;&nbsp;<Spinner animation=\"border\" size=\"sm\"\r\n                id=\"newWorkoutSaveButtonSpinner\" />\r\n            </>\r\n          ) : (\r\n            <>\r\n              Save&nbsp;&nbsp;<FontAwesomeIcon icon={faSave} size=\"sm\"\r\n                id=\"newWorkoutSaveButtonSaveIcon\" />\r\n            </>\r\n          )}\r\n        </Button>\r\n      </Container>\r\n    </FormikForm>\r\n  )\r\n}\r\n\r\nconst createWorkoutsList = (workouts) => {\r\n  const workoutsList = []\r\n  workouts.map((workout, index) => {\r\n    workoutsList.push(\r\n      <NavDropdown.Item\r\n        key={index}\r\n        eventKey={workout.categoryTitle}\r\n        id={workout.categoryTitle}\r\n      >\r\n        {workout.categoryTitle}\r\n      </NavDropdown.Item>)\r\n  })\r\n\r\n  return workoutsList\r\n}\r\n\r\nconst createWorkoutFields = (categoryTitle, workouts) => {\r\n  let workout = null\r\n\r\n  workouts && workouts.map(w => {\r\n    w.categoryTitle === categoryTitle ? workout = w : null\r\n  })\r\n\r\n  return workout\r\n}\r\n\r\nconst Workout = () => {\r\n  const [newCategoryTitle, setNewCategoryTitle] = useState(null)\r\n  const [text, setText] = useState(null)\r\n  const [isError, setIsError] = useState(false)\r\n  const [loading, setLoading] = useState(false)\r\n  const [selectedWorkout, setSelectedWorkout] = useState(storage.loadWorkout())\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (storage.loadUser() === null) {\r\n      dispatch(logout())\r\n    } else {\r\n      clearTimeout(storage.loadTimeout())\r\n      dispatch(getTooltips())\r\n      dispatch(getWorkouts())\r\n    }\r\n  }, [])\r\n\r\n  storage.saveTab('workout')\r\n\r\n  const workouts = useSelector(state => state.workout.workouts)\r\n  const tooltips = useSelector(state => state.profile.tooltips)\r\n\r\n  const workoutList = workouts\r\n    && createWorkoutsList(\r\n      workouts.sort((w1, w2) =>\r\n        (w1.categoryTitle > w2.categoryTitle) - (w1.categoryTitle < w2.categoryTitle))\r\n    )\r\n\r\n  const handleUpdateWorkout = async (values, { setSubmitting, resetForm }) => {\r\n    if (storage.loadUser() === null) {\r\n      dispatch(logout())\r\n    } else {\r\n      const d = new Date()\r\n      const date = d.getDate()  + '.' + (d.getMonth() + 1) + '.' + d.getFullYear()\r\n        + ' ' + d.getHours() + ':' + d.getMinutes() + ':' + d.getSeconds()\r\n      const categoryTitle = selectedWorkout.categoryTitle\r\n      const target = values.target\r\n      const result = {\r\n        date: date,\r\n        result: values.result\r\n      }\r\n      const notes = values.notes\r\n      setLoading(true)\r\n      setSubmitting(false)\r\n      resetForm(initialWorkoutValues)\r\n      try {\r\n        const workout = await workoutService.updateWorkout({\r\n          categoryTitle, target, result, notes\r\n        })\r\n        storage.saveWorkout(workout)\r\n        setSelectedWorkout(workout)\r\n        dispatch(getWorkouts())\r\n        setNewCategoryTitle(categoryTitle)\r\n        setText('The selected workout was updated')\r\n        const timeoutWorkout = setTimeout(() => {\r\n          setNewCategoryTitle(null)\r\n          setText(null)\r\n          setLoading(false)\r\n        }, 3000)\r\n        storage.saveTimeout(timeoutWorkout)\r\n      } catch(error) {\r\n        if (storage.loadUser() !== null) {\r\n          setIsError(true)\r\n          setText(`Error: New target result not a number or used comma [,]\r\n           instead of point [.] | New result not a number, empty or used comma [,]\r\n           instead of point [.] | Selected workout notes max size reached\r\n           | User logged out`)\r\n          const timeoutError = setTimeout(() => {\r\n            setIsError(false)\r\n            setText(null)\r\n            setLoading(false)\r\n          }, 6000)\r\n          storage.saveTimeout(timeoutError)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleDeleteWorkout = async () => {\r\n    if (storage.loadUser() === null) {\r\n      dispatch(logout())\r\n    } else {\r\n      if (confirm('Yes, I understand that his action is irreversible and I wish to delete my workout.')) {\r\n        if (selectedWorkout.categoryTitle === '' || selectedWorkout === null) {\r\n          setText('No workout was selected.')\r\n          const timeout = setTimeout(() => {\r\n            setText(null)\r\n          }, 3000)\r\n          storage.saveTimeout(timeout)\r\n        } else {\r\n          setLoading(true)\r\n          try {\r\n            await deleteService.deleteWorkout(selectedWorkout.categoryTitle)\r\n            storage.saveWorkout(null)\r\n            storage.saveStatistics(null)\r\n            setSelectedWorkout(null)\r\n            dispatch(deleteWorkout())\r\n            dispatch(getWorkouts())\r\n            setText('Workout was deleted.')\r\n            const timeoutDelete = setTimeout(() => {\r\n              setText(null)\r\n              setLoading(false)\r\n            }, 3000)\r\n            storage.saveTimeout(timeoutDelete)\r\n          } catch(error) {\r\n            if (storage.loadUser() !== null) {\r\n              setIsError(true)\r\n              setText(error.message)\r\n              const timeoutError = setTimeout(() => {\r\n                setIsError(false)\r\n                setText(null)\r\n                setLoading(false)\r\n              }, 6000)\r\n              storage.saveTimeout(timeoutError)\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        setLoading(true)\r\n        setText('Workout delete cancelled.')\r\n        const timeoutCancel = setTimeout(() => {\r\n          setText(null)\r\n          setLoading(false)\r\n        }, 3000)\r\n        storage.saveTimeout(timeoutCancel)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleAddWorkout = async (values, { setSubmitting, resetForm }) => {\r\n    if (storage.loadUser() === null) {\r\n      dispatch(logout())\r\n    } else {\r\n      const d = new Date()\r\n      const date = d.getDate()  + '.' + (d.getMonth() + 1) + '.' + d.getFullYear()\r\n        + ' ' + d.getHours() + ':' + d.getMinutes() + ':' + d.getSeconds()\r\n      const categoryTitle = values.categoryTitle.trim()\r\n      const target = values.target\r\n      const result = {\r\n        date: date,\r\n        result: 0\r\n      }\r\n      const notes = ' '\r\n      setLoading(true)\r\n      setSubmitting(false)\r\n      resetForm(initialWorkoutValues)\r\n      try {\r\n        const workout = await workoutService.createNewWorkout({\r\n          categoryTitle, target, result, notes\r\n        })\r\n        dispatch(createWorkout(workout))\r\n        dispatch(getWorkouts())\r\n        setNewCategoryTitle(categoryTitle)\r\n        setText('A new workout was added:')\r\n        const timeoutWorkout = setTimeout(() => {\r\n          setNewCategoryTitle(null)\r\n          setText(null)\r\n          setLoading(false)\r\n        }, 3000)\r\n        storage.saveTimeout(timeoutWorkout)\r\n      } catch(error) {\r\n        if (storage.loadUser() !== null) {\r\n          setIsError(true)\r\n          setText(`Error: Workout category and title is already in use or empty\r\n           | Target not a number, empty or used comma [,] instead of point [.]\r\n           | User logged out`)\r\n          const timeoutError = setTimeout(() => {\r\n            setIsError(false)\r\n            setText(null)\r\n            setLoading(false)\r\n          }, 6000)\r\n          storage.saveTimeout(timeoutError)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Dashboard />\r\n      <Navbar variant=\"light\" bg=\"light\" expand=\"lg\">\r\n        <Container>\r\n          <Navbar.Brand href=\"#\">Select workout: </Navbar.Brand>\r\n          <Navbar.Toggle />\r\n          <Navbar.Collapse>\r\n            <Nav\r\n              onSelect={(categoryTitle) => {\r\n                if (storage.loadUser() === null) {\r\n                  dispatch(logout())\r\n                } else {\r\n                  const workout = createWorkoutFields(categoryTitle, workouts)\r\n                  storage.saveWorkout(workout)\r\n                  setSelectedWorkout(workout)\r\n                  dispatch(getWorkouts())\r\n                }\r\n              }}\r\n            >\r\n              <NavDropdown\r\n                title=\"Workouts\"\r\n                menuVariant=\"light\"\r\n                id=\"workoutSelectWorkoutDropdown\"\r\n              >\r\n                {workoutList}\r\n              </NavDropdown>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      <h2 style={styles.subtitle}>Workout</h2>\r\n      {text !== null && <Notification text={text}\r\n        error={isError} name={newCategoryTitle} />}\r\n      <Tabs defaultActiveKey=\"selectedWorkout\" className=\"mb-4\">\r\n        <Tab eventKey=\"selectedWorkout\" title=\"Selected Workout\" disabled />\r\n      </Tabs>\r\n      {selectedWorkout !== null ? (\r\n        <UpdateWorkoutContainer onSubmit={handleUpdateWorkout} loading={loading}\r\n          tooltips={tooltips} workout={selectedWorkout} />\r\n      ) : (\r\n        null\r\n      )}\r\n      <DeleteWorkoutContainer onSubmit={handleDeleteWorkout} loading={loading}\r\n        tooltips={tooltips} workout={selectedWorkout} />\r\n      <NewWorkoutContainer onSubmit={handleAddWorkout} loading={loading}\r\n        tooltips={tooltips}/>\r\n      <br /><br />\r\n      <br /><br />\r\n      <Footer />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Workout","import React, { useEffect } from 'react'\r\nimport {\r\n  useDispatch, useSelector\r\n} from 'react-redux'\r\nimport {\r\n  BrowserRouter as Router, Redirect, Route, Switch,\r\n} from 'react-router-dom'\r\nimport { login } from './reducers/userReducer'\r\nimport storage from './utils/storage'\r\n\r\nimport { Container } from 'react-bootstrap'\r\n\r\nimport Help from './components/Help'\r\nimport Login from './components/Login'\r\nimport Planner from './components/Planner'\r\nimport Profile from './components/Profile'\r\nimport Register from './components/Register'\r\nimport Statistics from './components/Statistics'\r\nimport Timers from './components/Timers'\r\nimport Workout from './components/Workout'\r\n\r\nconst App = () => {\r\n  const user = useSelector(state => state.user)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    const user = storage.loadUser()\r\n    if (user) {\r\n      dispatch(login(user))\r\n    }\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <Container>\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/dashboard/workout\">\r\n            {user === null || storage.loadUser() === null ? (\r\n              <Redirect to=\"/welcome/login\" />\r\n            ) : (\r\n              <Workout />\r\n            )}\r\n          </Route>\r\n          <Route path=\"/dashboard/timers\">\r\n            {user === null || storage.loadUser() === null ? (\r\n              <Redirect to=\"/welcome/login\" />\r\n            ) : (\r\n              <Timers />\r\n            )}\r\n          </Route>\r\n          <Route path=\"/dashboard/statistics\">\r\n            {user === null || storage.loadUser() === null ? (\r\n              <Redirect to=\"/welcome/login\" />\r\n            ) : (\r\n              <Statistics />\r\n            )}\r\n          </Route>\r\n          <Route path=\"/dashboard/planner\">\r\n            {user === null || storage.loadUser() === null ? (\r\n              <Redirect to=\"/welcome/login\" />\r\n            ) : (\r\n              <Planner />\r\n            )}\r\n          </Route>\r\n          <Route path=\"/dashboard/profile\">\r\n            {user === null || storage.loadUser() === null ? (\r\n              <Redirect to=\"/welcome/login\" />\r\n            ) : (\r\n              <Profile />\r\n            )}\r\n          </Route>\r\n          <Route path=\"/dashboard/help\">\r\n            {user === null || storage.loadUser() === null ? (\r\n              <Redirect to=\"/welcome/login\" />\r\n            ) : (\r\n              <Help />\r\n            )}\r\n          </Route>\r\n          <Route path=\"/welcome/login\">\r\n            {user === null || storage.loadUser() === null ? (\r\n              <Login />\r\n            ) : (\r\n              <Redirect to=\"/dashboard/workout\" />\r\n            )}\r\n          </Route>\r\n          <Route path=\"/welcome/register\">\r\n            {user === null || storage.loadUser() === null ? (\r\n              <Register />\r\n            ) : (\r\n              <Redirect to=\"/dashboard/workout\" />\r\n            )}\r\n          </Route>\r\n          <Route path=\"/\">\r\n            {storage.loadTab() === 'login' && <Redirect to=\"/welcome/login\" />}\r\n            {storage.loadTab() === 'register' && <Redirect to=\"/welcome/register\" />}\r\n            {storage.loadTab() === 'workout' && <Redirect to=\"/dashboard/workout\" />}\r\n            {storage.loadTab() === 'timers' && <Redirect to=\"/dashboard/timers\" />}\r\n            {storage.loadTab() === 'statistics' && <Redirect to=\"/dashboard/statistics\" />}\r\n            {storage.loadTab() === 'planner' && <Redirect to=\"/dashboard/planner\" />}\r\n            {storage.loadTab() === 'profile' && <Redirect to=\"/dashboard/profile\" />}\r\n            {storage.loadTab() === 'help' && <Redirect to=\"/dashboard/help\" />}\r\n            {storage.loadTab() === null && <Redirect to=\"/welcome/login\" />}\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default App","import {\r\n  applyMiddleware, combineReducers, createStore\r\n} from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport plannerReducer from './reducers/plannerReducer'\r\nimport profileReducer from './reducers/profileReducer'\r\nimport timersReducer from './reducers/timersReducer'\r\nimport userReducer from './reducers/userReducer'\r\nimport workoutReducer from './reducers/workoutReducer'\r\n\r\nconst reducer = combineReducers({\r\n  planner: plannerReducer,\r\n  profile: profileReducer,\r\n  timers: timersReducer,\r\n  user: userReducer,\r\n  workout: workoutReducer,\r\n})\r\n\r\nexport default createStore(reducer, composeWithDevTools(\r\n  applyMiddleware(thunk)\r\n))","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport './utils/config'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './index.css'\r\n\r\nimport App from './App'\r\nimport store from './store'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)","const timersReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n  case 'NEW_COUNTDOWN':\r\n    return action.data\r\n  case 'NEW_COUNTDOWN_ADVANCE':\r\n    return action.data\r\n  case 'NEW_STOPWATCH_ADVANCE':\r\n    return action.data\r\n  case 'TOGGLE_COUNTDOWN_BOP':\r\n    return action.data\r\n  case 'TOGGLE_STOPWATCH_BOP':\r\n    return action.data\r\n  case 'NEW_METRONOME_COLOR':\r\n    return action.data\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const newCountdown = (newCountdown) => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: 'NEW_COUNTDOWN',\r\n      data: {\r\n        countdown: newCountdown,\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const newCountdownAdvance = (newCountdownAdvance) => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: 'NEW_COUNTDOWN_ADVANCE',\r\n      data: {\r\n        countdownAdvance: newCountdownAdvance,\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const newStopwatchAdvance = (newStopwatchAdvance) => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: 'NEW_STOPWATCH_ADVANCE',\r\n      data: {\r\n        stopwatchAdvance: newStopwatchAdvance,\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const toggleCountdownBop = (toggleCountdownBop) => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: 'TOGGLE_COUNTDOWN_BOP',\r\n      data: {\r\n        countdownBop: toggleCountdownBop,\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const toggleStopwatchBop = (toggleStopwatchBop) => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: 'TOGGLE_STOPWATCH_BOP',\r\n      data: {\r\n        stopwatchBop: toggleStopwatchBop,\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const newMetronomeColor = (newMetronomeColor) => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: 'NEW_METRONOME_COLOR',\r\n      data: {\r\n        metronomeColor: newMetronomeColor,\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default timersReducer"],"sourceRoot":""}